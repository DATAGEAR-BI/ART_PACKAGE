// <auto-generated />
using System;
using Data.Data.SASAml;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SqlServerMigrations.Migrations.SasAml
{
    [DbContext(typeof(SasAmlContext))]
    [Migration("20230820114634_SasAmlQueries")]
    partial class SasAmlQueries
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Data.ArtAlertedEntity", b =>
                {
                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("CASE_ID");

                    b.Property<DateTime>("CreateDate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Name")
                        .HasColumnType("CLOB")
                        .HasColumnName("NAME");

                    b.Property<string>("PepInd")
                        .HasColumnType("CLOB")
                        .HasColumnName("PEP_IND");

                    b.ToView("ART_ALERTED_ENTITY");
                });

            modelBuilder.Entity("Data.Data.ArtAmlAlertDetailView", b =>
                {
                    b.Property<string>("ActualValuesText")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ACTUAL_VALUES_TEXT");

                    b.Property<string>("AlertDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ALERT_DESCRIPTION");

                    b.Property<decimal?>("AlertId")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("ALERT_ID");

                    b.Property<string>("AlertStatus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ALERT_STATUS");

                    b.Property<string>("AlertSubCat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ALERT_SUB_CAT");

                    b.Property<string>("AlertTypeCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("ALERT_TYPE_CD");

                    b.Property<string>("AlertedEntityName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ALERTED_ENTITY_NAME");

                    b.Property<string>("AlertedEntityNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ALERTED_ENTITY_NUMBER");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CLOSE_DATE");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("EmployeeInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("EMPLOYEE_IND")
                        .IsFixedLength();

                    b.Property<int?>("InvestigationDays")
                        .HasColumnType("int")
                        .HasColumnName("INVESTIGATION_DAYS");

                    b.Property<decimal?>("MoneyLaunderingRiskScore")
                        .HasColumnType("decimal(3,0)")
                        .HasColumnName("MONEY_LAUNDERING_RISK_SCORE");

                    b.Property<string>("OwnerUserid")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("OWNER_USERID");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PARTY_TYPE_DESC");

                    b.Property<string>("PoliticallyExposedPersonInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("POLITICALLY_EXPOSED_PERSON_IND")
                        .IsFixedLength();

                    b.Property<string>("ReportCloseRsn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("REPORT_CLOSE_RSN");

                    b.Property<DateTime?>("RunDate")
                        .HasColumnType("datetime")
                        .HasColumnName("RUN_DATE");

                    b.Property<decimal?>("ScenarioId")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("SCENARIO_ID");

                    b.Property<string>("ScenarioName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("SCENARIO_NAME");

                    b.ToView("ART_AML_ALERT_DETAIL_VIEW", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ArtAmlCaseDetailsView", b =>
                {
                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("CaseCategory")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CASE_CATEGORY");

                    b.Property<decimal?>("CaseId")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CasePriority")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CASE_PRIORITY");

                    b.Property<string>("CaseStatus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CASE_STATUS");

                    b.Property<string>("CaseSubCategory")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CASE_SUB_CATEGORY");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Closed_Date");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("CREATED_BY");

                    b.Property<string>("EntityLevel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ENTITY_LEVEL");

                    b.Property<string>("EntityName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ENTITY_NAME");

                    b.Property<string>("EntityNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ENTITY_NUMBER");

                    b.Property<string>("Owner")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("OWNER");

                    b.ToView("ART_AML_CASE_DETAILS_VIEW", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ArtAmlCustomersDetailsView", b =>
                {
                    b.Property<string>("ActiveFlg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("ACTIVE_FLG")
                        .IsFixedLength();

                    b.Property<decimal?>("AnnualIncomeAmount")
                        .HasColumnType("decimal(10,0)")
                        .HasColumnName("ANNUAL_INCOME_AMOUNT");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("CitizenshipCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CITIZENSHIP_COUNTRY_NAME");

                    b.Property<string>("CityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("City_name");

                    b.Property<DateTime?>("CustomerDateOfBirth")
                        .HasColumnType("datetime")
                        .HasColumnName("customer_date_of_birth");

                    b.Property<string>("CustomerIdentificationId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("customer_identification_id");

                    b.Property<string>("CustomerIdentificationType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("customer_identification_type");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("customer_name");

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("customer_number");

                    b.Property<DateTime?>("CustomerSinceDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CUSTOMER_SINCE_DATE");

                    b.Property<string>("CustomerStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Customer_status");

                    b.Property<string>("CustomerTaxId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("Customer_Tax_ID");

                    b.Property<string>("CustomerType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("customer_type");

                    b.Property<string>("DoingBusinessAsName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DOING_BUSINESS_AS_NAME");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("EMAIL_ADDRESS");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("EMPLOYEE_NUMBER");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("EMPLOYER_NAME");

                    b.Property<string>("EmployerPhoneNumber")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("EMPLOYER_PHONE_NUMBER");

                    b.Property<string>("GovernorateName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("Governorate_name");

                    b.Property<string>("IndustryDesc")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("industry_desc");

                    b.Property<string>("IsEmployee")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("Is_EMPLOYEE")
                        .IsFixedLength();

                    b.Property<DateTime?>("LastRiskAssessmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_RISK_ASSESSMENT_DATE");

                    b.Property<string>("MailingAddress1")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("MAILING_ADDRESS_1");

                    b.Property<string>("MailingCityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("MAILING_CITY_NAME");

                    b.Property<string>("MailingCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MAILING_COUNTRY_NAME");

                    b.Property<string>("MailingPostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("MAILING_POSTAL_CODE")
                        .IsFixedLength();

                    b.Property<string>("MaritalStatusDesc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MARITAL_STATUS_DESC");

                    b.Property<decimal?>("NetWorthAmount")
                        .HasColumnType("decimal(10,0)")
                        .HasColumnName("NET_WORTH_AMOUNT");

                    b.Property<string>("NonProfitOrgInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("non_profit_org_ind")
                        .IsFixedLength();

                    b.Property<string>("OccupationDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("occupation_desc");

                    b.Property<string>("PhoneNumber1")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("PHONE_NUMBER_1");

                    b.Property<string>("PhoneNumber2")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("PHONE_NUMBER_2");

                    b.Property<string>("PhoneNumber3")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("PHONE_NUMBER_3");

                    b.Property<string>("PoliticallyExposedPersonInd")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("politically_exposed_person_ind")
                        .IsFixedLength();

                    b.Property<string>("ResidenceCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESIDENCE_COUNTRY_NAME");

                    b.Property<string>("RiskClassification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RISK_CLASSIFICATION");

                    b.Property<string>("StreetAddress1")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("street_address_1");

                    b.Property<string>("StreetCountryCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("STREET_COUNTRY_CODE")
                        .IsFixedLength();

                    b.Property<string>("StreetCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("STREET_COUNTRY_NAME");

                    b.Property<string>("StreetPostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("STREET_POSTAL_CODE")
                        .IsFixedLength();

                    b.ToView("ART_AML_CUSTOMERS_DETAILS_VIEW", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ArtAmlHighRiskCustView", b =>
                {
                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("CitizenshipCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CITIZENSHIP_COUNTRY_NAME");

                    b.Property<string>("MailingAddress1")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("MAILING_ADDRESS_1");

                    b.Property<string>("MailingCityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("MAILING_CITY_NAME");

                    b.Property<DateTime?>("PartyDateOfBirth")
                        .HasColumnType("datetime")
                        .HasColumnName("PARTY_DATE_OF_BIRTH");

                    b.Property<string>("PartyIdentificationId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("PARTY_IDENTIFICATION_ID");

                    b.Property<string>("PartyIdentificationTypeDesc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PARTY_IDENTIFICATION_TYPE_DESC");

                    b.Property<string>("PartyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("PARTY_NAME");

                    b.Property<string>("PartyNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PARTY_NUMBER");

                    b.Property<string>("PartyTaxId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("PARTY_TAX_ID");

                    b.Property<string>("PartyTypeDesc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PARTY_TYPE_DESC");

                    b.Property<string>("PhoneNumber1")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("PHONE_NUMBER_1");

                    b.Property<string>("PoliticallyExposedPersonInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("POLITICALLY_EXPOSED_PERSON_IND")
                        .IsFixedLength();

                    b.Property<string>("ResidenceCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESIDENCE_COUNTRY_NAME");

                    b.Property<string>("RiskClassification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RISK_CLASSIFICATION");

                    b.Property<string>("StreetAddress1")
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasColumnName("STREET_ADDRESS_1");

                    b.Property<string>("StreetCityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("STREET_CITY_NAME");

                    b.ToView("ART_AML_HIGH_RISK_CUST_VIEW", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ArtAmlTriageView", b =>
                {
                    b.Property<decimal?>("AgeOldestAlert")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("AGE_OLDEST_ALERT");

                    b.Property<decimal?>("AggregateAmt")
                        .HasColumnType("decimal(15,3)")
                        .HasColumnName("AGGREGATE_AMT");

                    b.Property<string>("AlertedEntityLevel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ALERTED_ENTITY_LEVEL");

                    b.Property<string>("AlertedEntityName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ALERTED_ENTITY_NAME");

                    b.Property<string>("AlertedEntityNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ALERTED_ENTITY_NUMBER");

                    b.Property<decimal?>("AlertsCnt")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("ALERTS_CNT");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("OwnerUserid")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("OWNER_USERID");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RISK_SCORE");

                    b.ToView("ART_AML_TRIAGE_VIEW", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ArtRiskAssessmentView", b =>
                {
                    b.Property<string>("AssessmentCategoryCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("ASSESSMENT_CATEGORY_CD");

                    b.Property<string>("AssessmentSubcategoryCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("ASSESSMENT_SUBCATEGORY_CD");

                    b.Property<string>("AssessmentTypeCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("ASSESSMENT_TYPE_CD");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("CREATE_USER_ID");

                    b.Property<string>("OwnerUserLongId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("OWNER_USER_LONG_ID");

                    b.Property<string>("PartyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PARTY_NAME");

                    b.Property<string>("PartyNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PARTY_NUMBER");

                    b.Property<string>("ProposedRiskClass")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PROPOSED_RISK_CLASS");

                    b.Property<decimal>("RiskAssessmentDuration")
                        .HasColumnType("decimal(3,0)")
                        .HasColumnName("RISK_ASSESSMENT_DURATION");

                    b.Property<decimal>("RiskAssessmentId")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("RISK_ASSESSMENT_ID");

                    b.Property<string>("RiskClass")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RISK_CLASS");

                    b.Property<string>("RiskStatus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RISK_STATUS");

                    b.Property<decimal>("VersionNumber")
                        .HasColumnType("decimal(10,0)")
                        .HasColumnName("VERSION_NUMBER");

                    b.ToView("ART_AML_RISK_ASSESSMENT_VIEW", "ART_DB");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeAlertsPerDate", b =>
                {
                    b.Property<int?>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Month")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("NumberOfAlerts")
                        .HasColumnType("int")
                        .HasColumnName("Number_Of_ALerts");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToView("ART_HOME_ALERTS_PER_DATE", "ART_DB");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeAlertsPerStatus", b =>
                {
                    b.Property<string>("AlertStatus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ALERT_STATUS");

                    b.Property<int?>("AlertsCount")
                        .HasColumnType("int")
                        .HasColumnName("Alerts_Count");

                    b.ToView("ART_HOME_ALERTS_PER_STATUS", "ART_DB");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeNumberOfAccount", b =>
                {
                    b.Property<int?>("NumberOfAccounts")
                        .HasColumnType("int")
                        .HasColumnName("Number_Of_Accounts");

                    b.ToView("ART_HOME_Number_Of_Accounts", "ART_DB");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeNumberOfCustomer", b =>
                {
                    b.Property<int?>("NumberOfCustomers")
                        .HasColumnType("int")
                        .HasColumnName("Number_Of_Customers");

                    b.ToView("ART_HOME_NUMBER_OF_CUSTOMERS", "ART_DB");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeNumberOfHighRiskCustomer", b =>
                {
                    b.Property<int?>("NumberOfHighRiskCustomers")
                        .HasColumnType("int")
                        .HasColumnName("Number_Of_High_Risk_Customers");

                    b.ToView("ART_HOME_NUMBER_OF_High_Risk_CUSTOMERS", "ART_DB");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeNumberOfPepCustomer", b =>
                {
                    b.Property<int?>("NumberOfPepCustomers")
                        .HasColumnType("int")
                        .HasColumnName("Number_Of_PEP_Customers");

                    b.ToView("ART_HOME_NUMBER_OF_PEP_CUSTOMERS", "ART_DB");
                });
#pragma warning restore 612, 618
        }
    }
}
