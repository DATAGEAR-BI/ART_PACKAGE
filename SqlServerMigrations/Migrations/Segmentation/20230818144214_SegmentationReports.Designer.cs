// <auto-generated />
using System;
using Data.Data.Segmentation;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SqlServerMigrations.Migrations.Segmentation
{
    [DbContext(typeof(SegmentationContext))]
    [Migration("20230818144214_SegmentationReports")]
    partial class SegmentationReports
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Data.Segmentation.ArtAlertsPerSegmentTb", b =>
                {
                    b.Property<string>("MonthKey")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("month_key")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("NumberOfAlerts")
                        .HasColumnType("float")
                        .HasColumnName("Number_Of_Alerts");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("party_type_desc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SegmentDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("segment_description");

                    b.Property<string>("SegmentSorted")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("segment_sorted")
                        .UseCollation("Arabic_CI_AI");

                    b.ToTable("ART_ALERTS_PER_SEGMENT_TB", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.Segmentation.ArtAllSegmentCustCountTb", b =>
                {
                    b.Property<string>("MonthKey")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Month_Key")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("NumberOfCustomers")
                        .HasColumnType("int")
                        .HasColumnName("Number_Of_Customers");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PARTY_TYPE_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SegmentDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("segment_description");

                    b.Property<string>("SegmentSorted")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("segment_sorted")
                        .UseCollation("Arabic_CI_AI");

                    b.ToTable("ART_ALL_SEGMENT_CUST_COUNT_TB", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.Segmentation.ArtAllSegmentsOutliersTb", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BRANCH_NAME")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("BRANCH_NUMBER")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Feature")
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("FEATURE");

                    b.Property<string>("MonthKey")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Month_Key")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PartyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("party_name")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PartyNumber")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PARTY_NUMBER")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PARTY_TYPE_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SegmentSorted")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("segment_sorted")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("UpperOutlierLimit")
                        .HasColumnType("float")
                        .HasColumnName("Upper_outlier_limit");

                    b.ToTable("ART_ALL_SEGMENTS_OUTLIERS_TB", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.Segmentation.ArtAllSegsFeatrsStatcsTb", b =>
                {
                    b.Property<double?>("AvgCashCAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_CASH_C_AMT");

                    b.Property<double?>("AvgCashDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_CASH_D_AMT");

                    b.Property<double?>("AvgCheckDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_CHECK_D_AMT");

                    b.Property<double?>("AvgFeesDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_FEES_D_AMT");

                    b.Property<double?>("AvgInternaltransferCAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_INTERNALTRANSFER_C_AMT");

                    b.Property<double?>("AvgInternaltransferDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_INTERNALTRANSFER_D_AMT");

                    b.Property<double?>("AvgMiscCAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_MISC_C_AMT");

                    b.Property<double?>("AvgTotalAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_TOTAL_AMT");

                    b.Property<double?>("AvgTotalCtAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_TOTAL_CT_AMT");

                    b.Property<double?>("AvgTotalDtAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_TOTAL_DT_AMT");

                    b.Property<double?>("AvgWireCAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_WIRE_C_AMT");

                    b.Property<double?>("AvgWireDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_WIRE_D_AMT");

                    b.Property<double?>("AvgWithdrawalDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_WITHDRAWAL_D_AMT");

                    b.Property<double?>("MaxCashCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_CASH_C_AMT");

                    b.Property<double?>("MaxCashDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_CASH_D_AMT");

                    b.Property<double?>("MaxCheckDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_CHECK_D_AMT");

                    b.Property<double?>("MaxFeesDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_FEES_D_AMT");

                    b.Property<double?>("MaxInternaltransferCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_INTERNALTRANSFER_C_AMT");

                    b.Property<double?>("MaxInternaltransferDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_INTERNALTRANSFER_D_AMT");

                    b.Property<double?>("MaxMiscCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_MISC_C_AMT");

                    b.Property<double?>("MaxTotalAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_TOTAL_AMT");

                    b.Property<double?>("MaxTotalCtAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_TOTAL_CT_AMT");

                    b.Property<double?>("MaxTotalDtAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_TOTAL_DT_AMT");

                    b.Property<double?>("MaxWireCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_WIRE_C_AMT");

                    b.Property<double?>("MaxWireDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_WIRE_D_AMT");

                    b.Property<double?>("MaxWithdrawalDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_WITHDRAWAL_D_AMT");

                    b.Property<double?>("MinCashCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_CASH_C_AMT");

                    b.Property<double?>("MinCashDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_CASH_D_AMT");

                    b.Property<double?>("MinCheckDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_CHECK_D_AMT");

                    b.Property<double?>("MinFeesDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_FEES_D_AMT");

                    b.Property<double?>("MinInternaltransferCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_INTERNALTRANSFER_C_AMT");

                    b.Property<double?>("MinInternaltransferDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_INTERNALTRANSFER_D_AMT");

                    b.Property<double?>("MinMiscCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_MISC_C_AMT");

                    b.Property<double?>("MinTotalAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_TOTAL_AMT");

                    b.Property<double?>("MinTotalCtAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_TOTAL_CT_AMT");

                    b.Property<double?>("MinTotalDtAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_TOTAL_DT_AMT");

                    b.Property<double?>("MinWireCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_WIRE_C_AMT");

                    b.Property<double?>("MinWireDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_WIRE_D_AMT");

                    b.Property<double?>("MinWithdrawalDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_WITHDRAWAL_D_AMT");

                    b.Property<string>("MonthKey")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("MONTH_KEY")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PARTY_TYPE_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SegmentDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("segment_description");

                    b.Property<string>("SegmentSorted")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("segment_sorted")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("TotalAmount")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_AMOUNT");

                    b.Property<double?>("TotalCashCAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CASH_C_AMT");

                    b.Property<double?>("TotalCashCCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CASH_C_CNT");

                    b.Property<double?>("TotalCashDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CASH_D_AMT");

                    b.Property<double?>("TotalCashDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CASH_D_CNT");

                    b.Property<double?>("TotalCheckDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CHECK_D_AMT");

                    b.Property<double?>("TotalCheckDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CHECK_D_CNT");

                    b.Property<double?>("TotalCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CNT");

                    b.Property<double?>("TotalCreditAmount")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CREDIT_AMOUNT");

                    b.Property<double?>("TotalCtCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CT_CNT");

                    b.Property<double?>("TotalDebitAmount")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_DEBIT_AMOUNT");

                    b.Property<double?>("TotalDebitCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_DEBIT_CNT");

                    b.Property<double?>("TotalFeesDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_FEES_D_AMT");

                    b.Property<double?>("TotalFeesDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_FEES_D_CNT");

                    b.Property<double?>("TotalInternaltransferCAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_INTERNALTRANSFER_C_AMT");

                    b.Property<double?>("TotalInternaltransferCCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_INTERNALTRANSFER_C_CNT");

                    b.Property<double?>("TotalInternaltransferDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_INTERNALTRANSFER_D_AMT");

                    b.Property<double?>("TotalInternaltransferDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_INTERNALTRANSFER_D_CNT");

                    b.Property<double?>("TotalMiscCAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_MISC_C_AMT");

                    b.Property<double?>("TotalMiscCCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_MISC_C_CNT");

                    b.Property<double?>("TotalWireCAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WIRE_C_AMT");

                    b.Property<double?>("TotalWireCCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WIRE_C_CNT");

                    b.Property<double?>("TotalWireDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WIRE_D_AMT");

                    b.Property<double?>("TotalWireDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WIRE_D_CNT");

                    b.Property<double?>("TotalWithdrawalDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WITHDRAWAL_D_AMT");

                    b.Property<double?>("TotalWithdrawalDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WITHDRAWAL_D_CNT");

                    b.ToTable("ART_ALL_SEGS_FEATRS_STATCS_TB", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.Segmentation.ArtAllSegsOutliersLimitTb", b =>
                {
                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)")
                        .HasColumnName("feature");

                    b.Property<string>("MonthKey")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("month_key")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("party_type_desc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SegmentSorted")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("segment_sorted")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("UpperOutlierLimit")
                        .HasColumnType("float")
                        .HasColumnName("Upper_outlier_limit");

                    b.ToTable("ART_ALL_SEGS_OUTLIERS_LIMIT_TB", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.Segmentation.ArtChangedSegmentTb", b =>
                {
                    b.Property<string>("CreationDate")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("CREATION_DATE")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("IndustryCode")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("INDUSTRY_CODE")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("IndustryDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("INDUSTRY_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("LastSegmentId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("LAST_SEGMENT_ID")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MonthKey")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("MONTH_KEY")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("OccupationDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("OCCUPATION_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PartyNumber")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PARTY_NUMBER")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PARTY_TYPE_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("RiskClassification")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RISK_CLASSIFICATION")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SegmentSorted")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("SEGMENT_SORTED")
                        .UseCollation("Arabic_CI_AI");

                    b.ToTable("ART_CHANGED_SEGMENT_TB", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.Segmentation.ArtCustsPerTypeTb", b =>
                {
                    b.Property<string>("MonthKey")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("MONTH_KEY")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("NumberOfCustomers")
                        .HasColumnType("int")
                        .HasColumnName("Number_Of_Customers");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PARTY_TYPE_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SegmentSorted")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("SEGMENT_SORTED")
                        .UseCollation("Arabic_CI_AI");

                    b.ToTable("ART_CUSTS_PER_TYPE_TB", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.Segmentation.ArtIndustrySegmentTb", b =>
                {
                    b.Property<string>("IndustryDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("industry_desc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MonthKey")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("month_key")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("NumberOfCustomers")
                        .HasColumnType("int")
                        .HasColumnName("Number_Of_Customers");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("party_type_Desc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SegmentSorted")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("segment_sorted")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("TotalAmount")
                        .HasColumnType("float")
                        .HasColumnName("total_amount");

                    b.Property<double?>("TotalCreditAmount")
                        .HasColumnType("float")
                        .HasColumnName("total_credit_amount");

                    b.Property<double?>("TotalDebitAmount")
                        .HasColumnType("float")
                        .HasColumnName("total_debit_amount");

                    b.ToTable("ART_INDUSTRY_SEGMENT_TB", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.Segmentation.ArtMebSegmentsV3Tb", b =>
                {
                    b.Property<double?>("AlertsCnt")
                        .HasColumnType("float")
                        .HasColumnName("ALERTS_CNT");

                    b.Property<double?>("AvgCashCAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_CASH_C_AMT");

                    b.Property<double?>("AvgCashDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_CASH_D_AMT");

                    b.Property<double?>("AvgCheckDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_CHECK_D_AMT");

                    b.Property<double?>("AvgFeesDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_FEES_D_AMT");

                    b.Property<double?>("AvgInternaltransferCAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_INTERNALTRANSFER_C_AMT");

                    b.Property<double?>("AvgInternaltransferDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_INTERNALTRANSFER_D_AMT");

                    b.Property<double?>("AvgMiscCAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_MISC_C_AMT");

                    b.Property<double?>("AvgTotalAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_TOTAL_AMT");

                    b.Property<double?>("AvgTotalCtAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_TOTAL_CT_AMT");

                    b.Property<double?>("AvgTotalDtAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_TOTAL_DT_AMT");

                    b.Property<double?>("AvgWireCAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_WIRE_C_AMT");

                    b.Property<double?>("AvgWireDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_WIRE_D_AMT");

                    b.Property<double?>("AvgWithdrawalDAmt")
                        .HasColumnType("float")
                        .HasColumnName("AVG_WITHDRAWAL_D_AMT");

                    b.Property<string>("IndustryCode")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("INDUSTRY_CODE")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("IndustryDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("INDUSTRY_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("MaxCashCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_CASH_C_AMT");

                    b.Property<double?>("MaxCashDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_CASH_D_AMT");

                    b.Property<double?>("MaxCheckDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_CHECK_D_AMT");

                    b.Property<double?>("MaxFeesDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_FEES_D_AMT");

                    b.Property<double?>("MaxInternaltransferCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_INTERNALTRANSFER_C_AMT");

                    b.Property<double?>("MaxInternaltransferDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_INTERNALTRANSFER_D_AMT");

                    b.Property<double?>("MaxMiscCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_MISC_C_AMT");

                    b.Property<double?>("MaxMls")
                        .HasColumnType("float")
                        .HasColumnName("MAX_MLS");

                    b.Property<double?>("MaxTotalAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_TOTAL_AMT");

                    b.Property<double?>("MaxTotalCtAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_TOTAL_CT_AMT");

                    b.Property<double?>("MaxTotalDtAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_TOTAL_DT_AMT");

                    b.Property<double?>("MaxWireCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_WIRE_C_AMT");

                    b.Property<double?>("MaxWireDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_WIRE_D_AMT");

                    b.Property<double?>("MaxWithdrawalDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MAX_WITHDRAWAL_D_AMT");

                    b.Property<double?>("MinCashCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_CASH_C_AMT");

                    b.Property<double?>("MinCashDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_CASH_D_AMT");

                    b.Property<double?>("MinCheckDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_CHECK_D_AMT");

                    b.Property<double?>("MinFeesDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_FEES_D_AMT");

                    b.Property<double?>("MinInternaltransferCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_INTERNALTRANSFER_C_AMT");

                    b.Property<double?>("MinInternaltransferDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_INTERNALTRANSFER_D_AMT");

                    b.Property<double?>("MinMiscCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_MISC_C_AMT");

                    b.Property<double?>("MinTotalAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_TOTAL_AMT");

                    b.Property<double?>("MinTotalCtAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_TOTAL_CT_AMT");

                    b.Property<double?>("MinTotalDtAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_TOTAL_DT_AMT");

                    b.Property<double?>("MinWireCAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_WIRE_C_AMT");

                    b.Property<double?>("MinWireDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_WIRE_D_AMT");

                    b.Property<double?>("MinWithdrawalDAmt")
                        .HasColumnType("float")
                        .HasColumnName("MIN_WITHDRAWAL_D_AMT");

                    b.Property<string>("MonthKey")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("MONTH_KEY")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("OccupationDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("OCCUPATION_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PartyNumber")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PARTY_NUMBER")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PARTY_TYPE_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("RiskClassification")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RISK_CLASSIFICATION")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SegmentSorted")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("segment_sorted")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("TotalAmount")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_AMOUNT");

                    b.Property<double?>("TotalCashCAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CASH_C_AMT");

                    b.Property<double?>("TotalCashCCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CASH_C_CNT");

                    b.Property<double?>("TotalCashDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CASH_D_AMT");

                    b.Property<double?>("TotalCashDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CASH_D_CNT");

                    b.Property<double?>("TotalCheckDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CHECK_D_AMT");

                    b.Property<double?>("TotalCheckDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CHECK_D_CNT");

                    b.Property<double?>("TotalCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CNT");

                    b.Property<double?>("TotalCreditAmount")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CREDIT_AMOUNT");

                    b.Property<double?>("TotalCtCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_CT_CNT");

                    b.Property<double?>("TotalDebitAmount")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_DEBIT_AMOUNT");

                    b.Property<double?>("TotalDebitCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_DEBIT_CNT");

                    b.Property<double?>("TotalFeesDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_FEES_D_AMT");

                    b.Property<double?>("TotalFeesDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_FEES_D_CNT");

                    b.Property<double?>("TotalInternaltransferCAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_INTERNALTRANSFER_C_AMT");

                    b.Property<double?>("TotalInternaltransferCCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_INTERNALTRANSFER_C_CNT");

                    b.Property<double?>("TotalInternaltransferDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_INTERNALTRANSFER_D_AMT");

                    b.Property<double?>("TotalInternaltransferDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_INTERNALTRANSFER_D_CNT");

                    b.Property<double?>("TotalMiscCAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_MISC_C_AMT");

                    b.Property<double?>("TotalMiscCCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_MISC_C_CNT");

                    b.Property<double?>("TotalWireCAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WIRE_C_AMT");

                    b.Property<double?>("TotalWireCCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WIRE_C_CNT");

                    b.Property<double?>("TotalWireDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WIRE_D_AMT");

                    b.Property<double?>("TotalWireDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WIRE_D_CNT");

                    b.Property<double?>("TotalWithdrawalDAmt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WITHDRAWAL_D_AMT");

                    b.Property<double?>("TotalWithdrawalDCnt")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_WITHDRAWAL_D_CNT");

                    b.ToTable("ART_MEB_SEGMENTS_V3_TB", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.Segmentation.ArtSegoutvsallcustTb", b =>
                {
                    b.Property<string>("MonthKey")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Month_Key")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("NumberOfCustomers")
                        .HasColumnType("int")
                        .HasColumnName("Number_of_Customers");

                    b.Property<int?>("NumberOfOutliers")
                        .HasColumnType("int")
                        .HasColumnName("Number_of_Outliers");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PARTY_TYPE_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SegmentSorted")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("segment_sorted")
                        .UseCollation("Arabic_CI_AI");

                    b.ToTable("ART_SEGOUTVSALLCUST_TB", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.Segmentation.ArtSegoutvsalloutTb", b =>
                {
                    b.Property<string>("MonthKey")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Month_Key")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("NumberOfOutliers")
                        .HasColumnType("int")
                        .HasColumnName("Number_of_Outliers");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("PARTY_TYPE_DESC")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SegmentSorted")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("segment_sorted")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int?>("TotalNumberOfOutliers")
                        .HasColumnType("int")
                        .HasColumnName("Total_Number_of_Outliers");

                    b.ToTable("ART_SEGOUTVSALLOUT_TB", "ART_DB");
                });
#pragma warning restore 612, 618
        }
    }
}
