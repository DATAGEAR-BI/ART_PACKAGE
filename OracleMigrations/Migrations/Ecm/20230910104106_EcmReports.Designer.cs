// <auto-generated />
using System;
using Data.Data.ECM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace OracleMigrations.Migrations.Ecm
{
    [DbContext(typeof(EcmContext))]
    [Migration("20230910104106_EcmReports")]
    partial class EcmReports
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ART")
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Data.ECM.ArtAlertedEntity", b =>
                {
                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(64)")
                        .HasColumnName("CASE_ID");

                    b.Property<DateTime>("CreateDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Name")
                        .HasColumnType("CLOB")
                        .HasColumnName("NAME");

                    b.Property<string>("PepInd")
                        .HasColumnType("CLOB")
                        .HasColumnName("PEP_IND");

                    b.ToView("ART_ALERTED_ENTITY");
                });

            modelBuilder.Entity("Data.Data.ECM.ArtHomeCasesDate", b =>
                {
                    b.Property<decimal?>("Day")
                        .HasColumnType("int")
                        .HasColumnName("DAY");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(36)")
                        .HasColumnName("MONTH");

                    b.Property<decimal?>("NumberOfCases")
                        .HasColumnType("int")
                        .HasColumnName("NUMBER_OF_CASES");

                    b.Property<decimal?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("YEAR");

                    b.ToView("ART_HOME_CASES_DATE");
                });

            modelBuilder.Entity("Data.Data.ECM.ArtHomeCasesStatus", b =>
                {
                    b.Property<string>("CaseStatus")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(9)")
                        .HasColumnName("CASE_STATUS");

                    b.Property<decimal?>("NumberOfCases")
                        .HasColumnType("int")
                        .HasColumnName("NUMBER_OF_CASES");

                    b.Property<int>("YEAR")
                        .HasColumnType("NUMBER(10)");

                    b.ToView("ART_HOME_CASES_STATUS");
                });

            modelBuilder.Entity("Data.Data.ECM.ArtHomeCasesType", b =>
                {
                    b.Property<string>("CaseType")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(400)")
                        .HasColumnName("CASE_TYPE");

                    b.Property<decimal?>("NumberOfCases")
                        .HasColumnType("int")
                        .HasColumnName("NUMBER_OF_CASES");

                    b.Property<int>("YEAR")
                        .HasColumnType("NUMBER(10)");

                    b.ToView("ART_HOME_CASES_TYPES");
                });

            modelBuilder.Entity("Data.Data.ECM.ArtSystemPerformance", b =>
                {
                    b.Property<string>("CaseDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_DESC");

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(64)")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CaseStatus")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("CASE_STATUS");

                    b.Property<string>("CaseType")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("CASE_TYPE");

                    b.Property<string>("ClientName")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("CLIENT_NAME");

                    b.Property<DateTime>("CreateDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<decimal?>("DurationsInDays")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DURATIONS_IN_DAYS");

                    b.Property<decimal?>("DurationsInHours")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DURATIONS_IN_HOURS");

                    b.Property<decimal?>("DurationsInMinutes")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DURATIONS_IN_MINUTES");

                    b.Property<decimal?>("DurationsInSeconds")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DURATIONS_IN_SECONDS");

                    b.Property<DateTime?>("EcmLastStatusDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("ECM_LAST_STATUS_DATE");

                    b.Property<string>("HitsCount")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("HITS_COUNT");

                    b.Property<string>("IdentityNum")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("IDENTITY_NUM");

                    b.Property<string>("InvestrUserId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("INVESTR_USER_ID");

                    b.Property<string>("LockedBy")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("LOCKED_BY");

                    b.Property<string>("Priority")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("PRIORITY");

                    b.Property<string>("SwiftMessage")
                        .HasColumnType("CLOB")
                        .HasColumnName("SWIFT_MESSAGE");

                    b.Property<string>("SwiftReference")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("SWIFT_REFERENCE");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("FLOAT")
                        .HasColumnName("TRANSACTION_AMOUNT");

                    b.Property<string>("TransactionCurrency")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TRANSACTION_CURRENCY");

                    b.Property<string>("TransactionDirection")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TRANSACTION_DIRECTION");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TRANSACTION_TYPE");

                    b.Property<string>("UpdateUserId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("UPDATE_USER_ID");

                    b.ToView("ART_SYSTEM_PERFORMANCE");
                });

            modelBuilder.Entity("Data.Data.ECM.ArtSystemPerfPerDate", b =>
                {
                    b.Property<int?>("DAY")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("MONTH")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("NUMBER_OF_CASES")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("YEAR")
                        .HasColumnType("NUMBER(10)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ECM.ArtSystemPerfPerType", b =>
                {
                    b.Property<string>("CASE_TYPE")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("TOTAL_NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ECM.ArtSystemPreformance", b =>
                {
                    b.Property<string>("CaseDesc")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("CaseRk")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("CaseStatus")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("CaseType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClientName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("DurationsInDays")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DurationsInHours")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DurationsInMinutes")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DurationsInSeconds")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("EcmLastStatusDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("HitsCount")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("IdentityNum")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("InvestrUserId")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LockedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Priority")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("SwiftReference")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double?>("TransactionAmount")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("TransactionCurrency")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TransactionDirection")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ValidFromDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.ToTable("ArtSystemPreformances", "ART");
                });

            modelBuilder.Entity("Data.Data.ECM.ArtSystemPrefPerDirection", b =>
                {
                    b.Property<decimal?>("TOTAL_NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("TRANSACTION_DIRECTION")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ECM.ArtSystemPrefPerStatus", b =>
                {
                    b.Property<string>("CASE_STATUS")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("TOTAL_NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ECM.ArtUserPerformance", b =>
                {
                    b.Property<string>("Action")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("ACTION");

                    b.Property<string>("ActionUser")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("ACTION_USER");

                    b.Property<DateTime?>("AsssignedTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ASSSIGNED_TIME");

                    b.Property<string>("CaseDesc")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CASE_DESC");

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("CASE_ID");

                    b.Property<decimal>("CaseRk")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("CASE_RK");

                    b.Property<string>("CaseStatus")
                        .HasMaxLength(4000)
                        .HasColumnType("NCLOB")
                        .HasColumnName("CASE_STATUS");

                    b.Property<string>("CaseTypeCd")
                        .HasMaxLength(32)
                        .HasColumnType("NVARCHAR2(32)")
                        .HasColumnName("CASE_TYPE_CD");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreateUserId")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("CREATE_USER_ID");

                    b.Property<int?>("DurationsInDays")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DURATIONS_IN_DAYS");

                    b.Property<int?>("DurationsInHours")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DURATIONS_IN_HOURS");

                    b.Property<int?>("DurationsInMinutes")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DURATIONS_IN_MINUTES");

                    b.Property<int?>("DurationsInSeconds")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DURATIONS_IN_SECONDS");

                    b.Property<string>("LockedBy")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("LOCKED_BY");

                    b.Property<string>("Priority")
                        .HasMaxLength(4000)
                        .HasColumnType("NCLOB")
                        .HasColumnName("PRIORITY");

                    b.Property<DateTime?>("ReleasedDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("RELEASED_DATE");

                    b.Property<string>("UpdateUserId")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("UPDATE_USER_ID");

                    b.Property<DateTime?>("ValidFromDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("VALID_FROM_DATE");

                    b.ToView("ART_USER_PERFORMANCE", "ART");
                });

            modelBuilder.Entity("Data.Data.ECM.ArtUserPerformancePerActionUser", b =>
                {
                    b.Property<string>("ACTION_USER")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("AVG_DURATIONS_IN_DAYS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_HOURS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_MINUTES")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_SECONDS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_DAYS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_HOURS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_MINUTES")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_SECONDS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("TOTAL_NUMBER_OF_CASES")
                        .HasColumnType("NUMBER(10)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ECM.ArtUserPerformPerAction", b =>
                {
                    b.Property<int?>("AVG_durations_in_days")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_durations_in_hours")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_durations_in_minutes")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_durations_in_seconds")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("Total_Number_Of_Cases")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("action")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("durations_in_days")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("durations_in_hours")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("durations_in_minutes")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("durations_in_seconds")
                        .HasColumnType("NUMBER(10)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ECM.ArtUserPerformPerUserAndAction", b =>
                {
                    b.Property<string>("ACTION")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ACTION_USER")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("AVG_DURATIONS_IN_DAYS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_HOURS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_MINUTES")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_SECONDS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_DAYS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_HOURS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_MINUTES")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_SECONDS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("TOTAL_NUMBER_OF_CASES")
                        .HasColumnType("NUMBER(10)");

                    b.ToView(null);
                });
#pragma warning restore 612, 618
        }
    }
}
