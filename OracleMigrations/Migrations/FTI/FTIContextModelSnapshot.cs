// <auto-generated />
using System;
using Data.Data.FTI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace OracleMigrations.Migrations.FTI
{
    [DbContext(typeof(FTIContext))]
    partial class FTIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Data.FTI.ArtTiAcpostingsAccReport", b =>
                {
                    b.Property<string>("AccountType")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(48)")
                        .HasColumnName("ACCOUNT_TYPE");

                    b.Property<string>("AcctNo")
                        .HasMaxLength(34)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(34)")
                        .HasColumnName("ACCT_NO")
                        .IsFixedLength();

                    b.Property<string>("BranchName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("Ccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CCY")
                        .IsFixedLength();

                    b.Property<string>("CusMnm")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("CUS_MNM");

                    b.Property<string>("DrCrFlg")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("DR_CR_FLG")
                        .IsFixedLength();

                    b.Property<string>("EventRef")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(24)")
                        .HasColumnName("EVENT_REF");

                    b.Property<string>("Mainbanking")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("MAINBANKING")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<decimal?>("PostAmount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("POST_AMOUNT");

                    b.Property<decimal?>("PostAmountEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("POST_AMOUNT_EGP");

                    b.Property<string>("Shortname")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("SHORTNAME");

                    b.Property<string>("Spsk")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("SPSK");

                    b.Property<DateTime?>("Valuedate")
                        .HasColumnType("DATE")
                        .HasColumnName("VALUEDATE");

                    b.ToView("ART_TI_ACPOSTINGS_ACC_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiAcpostingsCustReport", b =>
                {
                    b.Property<string>("AccountType")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(48)")
                        .HasColumnName("ACCOUNT_TYPE");

                    b.Property<string>("AcctNo")
                        .HasMaxLength(34)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(34)")
                        .HasColumnName("ACCT_NO")
                        .IsFixedLength();

                    b.Property<string>("BranchName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("Ccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CCY")
                        .IsFixedLength();

                    b.Property<string>("CusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("DrCrFlg")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("DR_CR_FLG")
                        .IsFixedLength();

                    b.Property<string>("EventRef")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(24)")
                        .HasColumnName("EVENT_REF");

                    b.Property<string>("Mainbanking")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("MAINBANKING")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<decimal?>("PostAmount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("POST_AMOUNT");

                    b.Property<decimal?>("PostAmountEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("POST_AMOUNT_EGP");

                    b.Property<string>("Shortname")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(15)")
                        .HasColumnName("SHORTNAME")
                        .IsFixedLength();

                    b.Property<string>("Spsk")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("SPSK");

                    b.Property<DateTime?>("Valuedate")
                        .HasColumnType("DATE")
                        .HasColumnName("VALUEDATE");

                    b.ToView("ART_TI_ACPOSTINGS_CUST_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiActivityReport", b =>
                {
                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength();

                    b.Property<string>("Address12")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS12")
                        .IsFixedLength();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT");

                    b.Property<decimal?>("AmountEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT_EGP");

                    b.Property<string>("BaseStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("BASE_STATUS")
                        .IsFixedLength();

                    b.Property<string>("BhalfBrn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BHALF_BRN")
                        .IsFixedLength();

                    b.Property<string>("BranchName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("Ccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CCY")
                        .IsFixedLength();

                    b.Property<string>("CcyCed")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("CCY_CED")
                        .IsFixedLength();

                    b.Property<string>("CusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("CusMnm12")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM12")
                        .IsFixedLength();

                    b.Property<string>("EventRef")
                        .HasMaxLength(44)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(44)")
                        .HasColumnName("EVENT_REF");

                    b.Property<string>("EventStatus")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(11)")
                        .HasColumnName("EVENT_STATUS");

                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("Gfcun12")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN12")
                        .IsFixedLength();

                    b.Property<string>("Language")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("LANGUAGE")
                        .IsFixedLength();

                    b.Property<string>("Lstmoduser")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("LSTMODUSER")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("Product")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("PRODUCT")
                        .IsFixedLength();

                    b.Property<string>("Relmstrref")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("RELMSTRREF")
                        .IsFixedLength();

                    b.Property<string>("Relmstrref12")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("RELMSTRREF12")
                        .IsFixedLength();

                    b.Property<string>("Shortname")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("SHORTNAME");

                    b.Property<string>("Sovalue")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("DATE")
                        .HasColumnName("START_DATE");

                    b.Property<string>("StartTime")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("START_TIME")
                        .IsFixedLength();

                    b.Property<string>("Started")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("STARTED");

                    b.Property<DateTime?>("StartedFilter")
                        .HasColumnType("DATE")
                        .HasColumnName("STARTED_FILTER");

                    b.Property<string>("Stepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("STEPDESCR");

                    b.Property<string>("SwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("SwBank12")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("SW_BANK12")
                        .IsFixedLength();

                    b.Property<string>("SwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("SwBranch12")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SW_BRANCH12")
                        .IsFixedLength();

                    b.Property<string>("SwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("SwCtr12")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_CTR12")
                        .IsFixedLength();

                    b.Property<string>("SwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_LOC")
                        .IsFixedLength();

                    b.Property<string>("SwLoc12")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_LOC12")
                        .IsFixedLength();

                    b.Property<string>("Team")
                        .HasMaxLength(51)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(51)")
                        .HasColumnName("TEAM");

                    b.Property<DateTime?>("Touched")
                        .HasColumnType("DATE")
                        .HasColumnName("TOUCHED");

                    b.ToView("ART_TI_ACTIVITY_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiAdvancePaymentUtilizationReport", b =>
                {
                    b.Property<long?>("AdvAmount")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("ADV_AMOUNT");

                    b.Property<string>("AdvCurrency")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("ADV_CURRENCY")
                        .IsFixedLength();

                    b.Property<string>("AdvReference")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("ADV_REFERENCE")
                        .IsFixedLength();

                    b.Property<string>("Branch")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BRANCH")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATION_DATE");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("DATE")
                        .HasColumnName("EXPIRY_DATE");

                    b.Property<string>("NonPrincipalParty")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("NON_PRINCIPAL_PARTY")
                        .IsFixedLength();

                    b.Property<decimal?>("OutstandingAmount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTANDING_AMOUNT");

                    b.Property<string>("PrincipalParty")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("PRINCIPAL_PARTY")
                        .IsFixedLength();

                    b.Property<long?>("UtilizationAmount")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("UTILIZATION_AMOUNT");

                    b.Property<string>("UtilizationCurrency")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("UTILIZATION_CURRENCY")
                        .IsFixedLength();

                    b.Property<string>("UtilizationTrn")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("UTILIZATION_TRN");

                    b.ToView("ART_TI_ADVANCE_PAYMENT_UTILIZATION_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiAmortizationReport", b =>
                {
                    b.Property<decimal?>("AccPeriod")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("ACC_PERIOD");

                    b.Property<long?>("AccrueAmt")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("ACCRUE_AMT");

                    b.Property<string>("AccrueCcy")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("ACCRUE_CCY");

                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength();

                    b.Property<string>("BhalfBrn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BHALF_BRN")
                        .IsFixedLength();

                    b.Property<string>("C8ced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("C8CED")
                        .IsFixedLength();

                    b.Property<long?>("ChargeAmt")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("CHARGE_AMT");

                    b.Property<string>("ChargeCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CHARGE_CCY")
                        .IsFixedLength();

                    b.Property<string>("Chgpextraday")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("CHGPEXTRADAY");

                    b.Property<DateTime?>("CtrctDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CTRCT_DATE");

                    b.Property<string>("CusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM")
                        .IsFixedLength();

                    b.Property<decimal?>("DailyAcc")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DAILY_ACC");

                    b.Property<string>("Descr")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("DESCR")
                        .IsFixedLength();

                    b.Property<string>("Descri56")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("DESCRI56")
                        .IsFixedLength();

                    b.Property<DateTime?>("EndDat")
                        .HasColumnType("DATE")
                        .HasColumnName("END_DAT");

                    b.Property<string>("EventRef")
                        .HasMaxLength(43)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(43)")
                        .HasColumnName("EVENT_REF");

                    b.Property<DateTime?>("ExpiryDat")
                        .HasColumnType("DATE")
                        .HasColumnName("EXPIRY_DAT");

                    b.Property<string>("Firststart")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("FIRSTSTART")
                        .IsFixedLength();

                    b.Property<string>("Fullname")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("FULLNAME");

                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(10)")
                        .HasColumnName("ID")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("Outccyced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("OUTCCYCED")
                        .IsFixedLength();

                    b.Property<decimal?>("Outstamt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT");

                    b.Property<string>("Outstccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("OUTSTCCY")
                        .IsFixedLength();

                    b.Property<decimal?>("PeriodChg")
                        .HasColumnType("NUMBER(20)")
                        .HasColumnName("PERIOD_CHG");

                    b.Property<string>("Periodic")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("PERIODIC")
                        .IsFixedLength();

                    b.Property<string>("Relmstrref")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("RELMSTRREF");

                    b.Property<string>("Sovalue")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE");

                    b.Property<DateTime?>("StartDat")
                        .HasColumnType("DATE")
                        .HasColumnName("START_DAT");

                    b.Property<string>("Workgroup")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(15)")
                        .HasColumnName("WORKGROUP")
                        .IsFixedLength();

                    b.ToView("ART_TI_Amortization_Report");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiChargesByCustReport", b =>
                {
                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("Hvbad1")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("HVBAD1");

                    b.Property<string>("Longname")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("LONGNAME");

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<decimal?>("TotoalBilledChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_BILLED_CHG_DUE");

                    b.Property<decimal?>("TotoalClaimedChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_CLAIMED_CHG_DUE");

                    b.Property<decimal?>("TotoalOutstandingChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_OUTSTANDING_CHG_DUE");

                    b.Property<decimal?>("TotoalPaidChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_PAID_CHG_DUE");

                    b.Property<decimal?>("TotoalPeriodicBilledChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_PERIODIC_BILLED_CHG_DUE");

                    b.Property<decimal?>("TotoalWaivedChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_WAIVED_CHG_DUE");

                    b.ToView("ART_TI_CHARGES_BY_CUST_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiChargesByMasterReport", b =>
                {
                    b.Property<string>("Hvbad1")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("HVBAD1");

                    b.Property<string>("Longname")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("LONGNAME");

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<decimal?>("TotoalBilledChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_BILLED_CHG_DUE");

                    b.Property<decimal?>("TotoalClaimedChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_CLAIMED_CHG_DUE");

                    b.Property<decimal?>("TotoalOutstandingChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_OUTSTANDING_CHG_DUE");

                    b.Property<decimal?>("TotoalPaidChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_PAID_CHG_DUE");

                    b.Property<decimal?>("TotoalPeriodicBilledChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_PERIODIC_BILLED_CHG_DUE");

                    b.Property<decimal?>("TotoalWaivedChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTOAL_WAIVED_CHG_DUE");

                    b.ToView("ART_TI_CHARGES_BY_MASTER_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiChargesDetailsReport", b =>
                {
                    b.Property<string>("Action")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(48)")
                        .HasColumnName("ACTION");

                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength();

                    b.Property<string>("BhalfBrn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BHALF_BRN")
                        .IsFixedLength();

                    b.Property<string>("ChgCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CHG_CCY")
                        .IsFixedLength();

                    b.Property<decimal?>("ChgDue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CHG_DUE");

                    b.Property<decimal?>("ChgDueEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CHG_DUE_EGP");

                    b.Property<decimal?>("ChgbasAmt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CHGBAS_AMT");

                    b.Property<decimal?>("ChgbasAmtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CHGBAS_AMT_EGP");

                    b.Property<string>("ChgbasCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CHGBAS_CCY")
                        .IsFixedLength();

                    b.Property<string>("CusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("Descr")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("DESCR")
                        .IsFixedLength();

                    b.Property<string>("EventRef")
                        .HasMaxLength(44)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(44)")
                        .HasColumnName("EVENT_REF");

                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("Hvbad1")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("HVBAD1");

                    b.Property<string>("Longname")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("LONGNAME");

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("ParticChg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("PARTIC_CHG")
                        .IsFixedLength();

                    b.Property<string>("Reduction")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("REDUCTION")
                        .IsFixedLength();

                    b.Property<string>("RefnoPfix1")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("REFNO_PFIX1")
                        .IsFixedLength();

                    b.Property<decimal?>("RefnoSerl1")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REFNO_SERL1");

                    b.Property<decimal?>("SchAmt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SCH_AMT");

                    b.Property<decimal?>("SchAmtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SCH_AMT_EGP");

                    b.Property<string>("SchCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SCH_CCY")
                        .IsFixedLength();

                    b.Property<string>("SchCcySei")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("SCH_CCY_SEI")
                        .IsFixedLength();

                    b.Property<decimal?>("SchCcySpt")
                        .HasColumnType("NUMBER(28,20)")
                        .HasColumnName("SCH_CCY_SPT");

                    b.Property<decimal?>("SchRate")
                        .HasColumnType("NUMBER(28,20)")
                        .HasColumnName("SCH_RATE");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("DATE")
                        .HasColumnName("START_DATE");

                    b.Property<string>("StartTime")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("START_TIME")
                        .IsFixedLength();

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("STATUS");

                    b.Property<string>("SwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("SwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("SwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("SwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_LOC")
                        .IsFixedLength();

                    b.Property<long?>("TaxAmt")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("TAX_AMT");

                    b.Property<string>("TaxCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("TAX_CCY")
                        .IsFixedLength();

                    b.Property<string>("TaxFor")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("TAX_FOR")
                        .IsFixedLength();

                    b.ToView("ART_TI_CHARGES_DETAILS_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiDiaryExceptionsReport", b =>
                {
                    b.Property<string>("Active")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ACTIVE")
                        .IsFixedLength();

                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT");

                    b.Property<decimal?>("AmountEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT_EGP");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BRANCH_CODE")
                        .IsFixedLength();

                    b.Property<string>("BranchName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("Ccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CCY")
                        .IsFixedLength();

                    b.Property<string>("CcyCed")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("CCY_CED")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateTime?>("CtrctDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CTRCT_DATE");

                    b.Property<string>("CusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM")
                        .IsFixedLength();

                    b.Property<DateTime?>("ExpiryDat")
                        .HasColumnType("DATE")
                        .HasColumnName("EXPIRY_DAT");

                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("NoteText")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("NOTE_TEXT");

                    b.Property<string>("Outccyced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("OUTCCYCED")
                        .IsFixedLength();

                    b.Property<decimal?>("Outstamt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT");

                    b.Property<decimal?>("OutstamtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT_EGP");

                    b.Property<string>("Outstccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("OUTSTCCY")
                        .IsFixedLength();

                    b.Property<string>("Product")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("PRODUCT")
                        .IsFixedLength();

                    b.Property<string>("RefnoPfix")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("REFNO_PFIX")
                        .IsFixedLength();

                    b.Property<decimal?>("RefnoSerl")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REFNO_SERL");

                    b.Property<string>("Relmstrref")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("RELMSTRREF")
                        .IsFixedLength();

                    b.Property<string>("Sovaluecode")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUECODE");

                    b.Property<string>("Sovaluedesc")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUEDESC");

                    b.Property<string>("Status")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("STATUS")
                        .IsFixedLength();

                    b.Property<string>("SwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("SwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("SwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("SwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_LOC")
                        .IsFixedLength();

                    b.Property<string>("Team")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(15)")
                        .HasColumnName("TEAM")
                        .IsFixedLength();

                    b.ToView("ART_TI_DIARY_EXCEPTIONS_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiEcmAuditReport", b =>
                {
                    b.Property<string>("BranchId")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("BRANCH_ID");

                    b.Property<string>("CaseStatCd")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_STAT_CD");

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("COMMENTS");

                    b.Property<string>("CutomerName")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("CUTOMER_NAME");

                    b.Property<DateTime>("EcmCaseCreationDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("ECM_CASE_CREATION_DATE");

                    b.Property<string>("EcmEvent")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("ECM_EVENT");

                    b.Property<string>("EcmReference")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(64)")
                        .HasColumnName("ECM_REFERENCE");

                    b.Property<DateTime?>("EventCreationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("EVENT_CREATION_DATE");

                    b.Property<string>("EventName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("EVENT_NAME")
                        .IsFixedLength();

                    b.Property<string>("EventStatus")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(11)")
                        .HasColumnName("EVENT_STATUS");

                    b.Property<string>("EventSteps")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(21)")
                        .HasColumnName("EVENT_STEPS");

                    b.Property<string>("FtiReference")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("FTI_REFERENCE")
                        .IsFixedLength();

                    b.Property<string>("MasterAssignedTo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_ASSIGNED_TO")
                        .IsFixedLength();

                    b.Property<string>("PrimaryOwner")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("PRIMARY_OWNER");

                    b.Property<string>("Product")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("PRODUCT");

                    b.Property<string>("Producttype")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("PRODUCTTYPE");

                    b.Property<string>("StepStatus")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(9)")
                        .HasColumnName("STEP_STATUS");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("NUMBER(38,4)")
                        .HasColumnName("TRANSACTION_AMOUNT");

                    b.Property<string>("TransactionCurrency")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TRANSACTION_CURRENCY");

                    b.Property<string>("UpdateUserId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("UPDATE_USER_ID");

                    b.ToView("ART_TI_ECM_AUDIT_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiEcmTransactionsReport", b =>
                {
                    b.Property<string>("Applicantname")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("APPLICANTNAME");

                    b.Property<string>("Behalfofbranch")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("BEHALFOFBRANCH");

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(64)")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CaseStatCd")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_STAT_CD");

                    b.Property<DateTime>("CreateDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Eventname")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("EVENTNAME");

                    b.Property<string>("PrimaryOwner")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("PRIMARY_OWNER");

                    b.Property<string>("Product")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("PRODUCT");

                    b.Property<string>("Producttype")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("PRODUCTTYPE");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("NUMBER(38,4)")
                        .HasColumnName("TRANSACTION_AMOUNT");

                    b.Property<string>("TransactionCurrency")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TRANSACTION_CURRENCY");

                    b.Property<string>("UpdateUserId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("UPDATE_USER_ID");

                    b.ToView("ART_TI_ECM_TRANSACTIONS_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiEcmWorkflowProgReport", b =>
                {
                    b.Property<string>("AssignedTo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("ASSIGNED_TO")
                        .IsFixedLength();

                    b.Property<string>("AssignmentType")
                        .HasMaxLength(62)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(62)")
                        .HasColumnName("ASSIGNMENT_TYPE");

                    b.Property<string>("AuthorizeSlaStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("AUTHORIZE_SLA_STATUS");

                    b.Property<decimal?>("AuthorizeStepTime")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AUTHORIZE_STEP_TIME");

                    b.Property<string>("BranchId")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("BRANCH_ID");

                    b.Property<string>("CaseStatCd")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_STAT_CD");

                    b.Property<string>("CutomerName")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("CUTOMER_NAME");

                    b.Property<DateTime>("EcmCaseCreationDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("ECM_CASE_CREATION_DATE");

                    b.Property<string>("EcmEvent")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("ECM_EVENT");

                    b.Property<string>("EcmReference")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(64)")
                        .HasColumnName("ECM_REFERENCE");

                    b.Property<string>("EcmRejectionReason")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ECM_REJECTION_REASON");

                    b.Property<string>("EcmRejectionType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ECM_REJECTION_TYPE");

                    b.Property<DateTime?>("EventCreationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("EVENT_CREATION_DATE");

                    b.Property<string>("EventName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("EVENT_NAME")
                        .IsFixedLength();

                    b.Property<string>("EventStatus")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(11)")
                        .HasColumnName("EVENT_STATUS");

                    b.Property<string>("EventSteps")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(21)")
                        .HasColumnName("EVENT_STEPS");

                    b.Property<string>("ExternalReviewSlaStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("EXTERNAL_REVIEW_SLA_STATUS");

                    b.Property<decimal?>("ExternalReviewStepTime")
                        .HasColumnType("NUMBER")
                        .HasColumnName("EXTERNAL_REVIEW_STEP_TIME");

                    b.Property<string>("FtiReference")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("FTI_REFERENCE")
                        .IsFixedLength();

                    b.Property<decimal?>("InputMaxTime")
                        .HasColumnType("NUMBER")
                        .HasColumnName("INPUT_MAX_TIME");

                    b.Property<string>("InputSlaStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("INPUT_SLA_STATUS");

                    b.Property<decimal?>("InputStepTime")
                        .HasColumnType("NUMBER")
                        .HasColumnName("INPUT_STEP_TIME");

                    b.Property<DateTime?>("Lstmodtime")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("LSTMODTIME");

                    b.Property<string>("Lstmoduser")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("LSTMODUSER")
                        .IsFixedLength();

                    b.Property<string>("PrimaryOwner")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("PRIMARY_OWNER");

                    b.Property<string>("Product")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("PRODUCT");

                    b.Property<string>("ProductType")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("PRODUCT_TYPE");

                    b.Property<string>("RejectionReason")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("REJECTION_REASON");

                    b.Property<string>("ReviewSlaStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("REVIEW_SLA_STATUS");

                    b.Property<decimal?>("ReviewStepTime")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REVIEW_STEP_TIME");

                    b.Property<DateTime?>("SlaDashboardAmber")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("SLA_DASHBOARD_AMBER");

                    b.Property<DateTime?>("SlaDashboardRed")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("SLA_DASHBOARD_RED");

                    b.Property<DateTime?>("SlaDeadline")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("SLA_DEADLINE");

                    b.Property<long?>("SlaRemainingTime")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("SLA_REMAINING_TIME");

                    b.Property<string>("StepStatus")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(9)")
                        .HasColumnName("STEP_STATUS");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("NUMBER(38,4)")
                        .HasColumnName("TRANSACTION_AMOUNT");

                    b.Property<string>("TransactionCurrency")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TRANSACTION_CURRENCY");

                    b.Property<string>("UpdateUserId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("UPDATE_USER_ID");

                    b.Property<string>("WarningOverridden")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("WARNING_OVERRIDDEN")
                        .IsFixedLength();

                    b.ToView("ART_TI_ECM_WORKFLOW_PROG_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiEcmWorkflowProgReportOld", b =>
                {
                    b.Property<string>("AssignedTo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("ASSIGNED_TO")
                        .IsFixedLength();

                    b.Property<string>("AssignmentType")
                        .HasMaxLength(62)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(62)")
                        .HasColumnName("ASSIGNMENT_TYPE");

                    b.Property<string>("AuthorizeSlaStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("AUTHORIZE_SLA_STATUS");

                    b.Property<decimal?>("AuthorizeStepTime")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AUTHORIZE_STEP_TIME");

                    b.Property<string>("BranchId")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("BRANCH_ID");

                    b.Property<string>("CaseStatCd")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_STAT_CD");

                    b.Property<string>("Comments")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("COMMENTS");

                    b.Property<string>("CutomerName")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("CUTOMER_NAME");

                    b.Property<DateTime>("EcmCaseCreationDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("ECM_CASE_CREATION_DATE");

                    b.Property<string>("EcmEvent")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("ECM_EVENT");

                    b.Property<string>("EcmReference")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(64)")
                        .HasColumnName("ECM_REFERENCE");

                    b.Property<string>("EcmRejectionReason")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ECM_REJECTION_REASON");

                    b.Property<string>("EcmRejectionType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ECM_REJECTION_TYPE");

                    b.Property<DateTime?>("EventCreationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("EVENT_CREATION_DATE");

                    b.Property<string>("EventName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("EVENT_NAME")
                        .IsFixedLength();

                    b.Property<string>("EventStatus")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(11)")
                        .HasColumnName("EVENT_STATUS");

                    b.Property<string>("EventSteps")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(21)")
                        .HasColumnName("EVENT_STEPS");

                    b.Property<string>("ExternalReviewSlaStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("EXTERNAL_REVIEW_SLA_STATUS");

                    b.Property<decimal?>("ExternalReviewStepTime")
                        .HasColumnType("NUMBER")
                        .HasColumnName("EXTERNAL_REVIEW_STEP_TIME");

                    b.Property<string>("FtiReference")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("FTI_REFERENCE")
                        .IsFixedLength();

                    b.Property<decimal?>("InputMaxTime")
                        .HasColumnType("NUMBER")
                        .HasColumnName("INPUT_MAX_TIME");

                    b.Property<string>("InputSlaStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("INPUT_SLA_STATUS");

                    b.Property<decimal?>("InputStepTime")
                        .HasColumnType("NUMBER")
                        .HasColumnName("INPUT_STEP_TIME");

                    b.Property<DateTime?>("Lstmodtime")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("LSTMODTIME");

                    b.Property<string>("Lstmoduser")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("LSTMODUSER")
                        .IsFixedLength();

                    b.Property<string>("Note")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("NOTE");

                    b.Property<DateTime?>("NoteCreationTime")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("NOTE_CREATION_TIME");

                    b.Property<string>("PrimaryOwner")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("PRIMARY_OWNER");

                    b.Property<string>("Product")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("PRODUCT");

                    b.Property<string>("ProductType")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("PRODUCT_TYPE");

                    b.Property<string>("RejectionReason")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("REJECTION_REASON");

                    b.Property<string>("ReviewSlaStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("REVIEW_SLA_STATUS");

                    b.Property<decimal?>("ReviewStepTime")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REVIEW_STEP_TIME");

                    b.Property<DateTime?>("SlaDashboardAmber")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("SLA_DASHBOARD_AMBER");

                    b.Property<DateTime?>("SlaDashboardRed")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("SLA_DASHBOARD_RED");

                    b.Property<DateTime?>("SlaDeadline")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("SLA_DEADLINE");

                    b.Property<long?>("SlaRemainingTime")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("SLA_REMAINING_TIME");

                    b.Property<string>("StepStatus")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(9)")
                        .HasColumnName("STEP_STATUS");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("NUMBER(38,4)")
                        .HasColumnName("TRANSACTION_AMOUNT");

                    b.Property<string>("TransactionCurrency")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TRANSACTION_CURRENCY");

                    b.Property<string>("UpdateUserId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("UPDATE_USER_ID");

                    b.Property<string>("WarningOverridden")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("WARNING_OVERRIDDEN")
                        .IsFixedLength();

                    b.ToView("ART_TI_ECM_WORKFLOW_PROG_REPORT_OLD");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiFinanInterAccrual", b =>
                {
                    b.Property<decimal?>("Actualrate")
                        .HasColumnType("NUMBER(11,7)")
                        .HasColumnName("ACTUALRATE");

                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength();

                    b.Property<decimal?>("AmtOS")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMT_O_S");

                    b.Property<decimal?>("AmtOSEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMT_O_S_EGP");

                    b.Property<string>("AmtOrPct")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("AMT_OR_PCT")
                        .IsFixedLength();

                    b.Property<long?>("BalancAmt")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("BALANC_AMT");

                    b.Property<decimal?>("BaseRate2")
                        .HasColumnType("NUMBER(11,7)")
                        .HasColumnName("BASE_RATE2");

                    b.Property<string>("BhalfBrn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BHALF_BRN")
                        .IsFixedLength();

                    b.Property<string>("BranchName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<DateTime?>("Calcdte")
                        .HasColumnType("DATE")
                        .HasColumnName("CALCDTE");

                    b.Property<DateTime?>("CalcdtePd")
                        .HasColumnType("DATE")
                        .HasColumnName("CALCDTE_PD");

                    b.Property<decimal?>("Calcrate")
                        .HasColumnType("NUMBER(11,7)")
                        .HasColumnName("CALCRATE");

                    b.Property<decimal?>("Calcrate1")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CALCRATE1");

                    b.Property<string>("CcyCed")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("CCY_CED")
                        .IsFixedLength();

                    b.Property<string>("CcySei")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("CCY_SEI")
                        .IsFixedLength();

                    b.Property<decimal?>("CcySpt")
                        .HasColumnType("NUMBER(28,20)")
                        .HasColumnName("CCY_SPT");

                    b.Property<long?>("Commitamt")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("COMMITAMT");

                    b.Property<string>("CusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM")
                        .IsFixedLength();

                    b.Property<DateTime?>("Cycleend")
                        .HasColumnType("DATE")
                        .HasColumnName("CYCLEEND");

                    b.Property<string>("DealCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("DEAL_CCY")
                        .IsFixedLength();

                    b.Property<decimal?>("DiffRate2")
                        .HasColumnType("NUMBER(11,7)")
                        .HasColumnName("DIFF_RATE2");

                    b.Property<DateTime?>("EarlyDate")
                        .HasColumnType("DATE")
                        .HasColumnName("EARLY_DATE");

                    b.Property<string>("Extraday")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("EXTRADAY")
                        .IsFixedLength();

                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("GroupCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(6)")
                        .HasColumnName("GROUP_CODE")
                        .IsFixedLength();

                    b.Property<decimal?>("GroupRate2")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GROUP_RATE2");

                    b.Property<string>("Idb")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("IDB")
                        .IsFixedLength();

                    b.Property<string>("InterestRateType")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(80)")
                        .HasColumnName("INTEREST_RATE_TYPE");

                    b.Property<string>("Interp")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("INTERP")
                        .IsFixedLength();

                    b.Property<decimal?>("Interprate")
                        .HasColumnType("NUMBER(11,7)")
                        .HasColumnName("INTERPRATE");

                    b.Property<decimal?>("IntpAmt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("INTP_AMT");

                    b.Property<decimal?>("IntpAmtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("INTP_AMT_EGP");

                    b.Property<string>("IntpCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("INTP_CCY")
                        .IsFixedLength();

                    b.Property<decimal?>("Intperday")
                        .HasColumnType("NUMBER")
                        .HasColumnName("INTPERDAY");

                    b.Property<decimal?>("Intpernum")
                        .HasColumnType("NUMBER")
                        .HasColumnName("INTPERNUM");

                    b.Property<string>("Intperunit")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("INTPERUNIT")
                        .IsFixedLength();

                    b.Property<string>("Inttypeid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(10)")
                        .HasColumnName("INTTYPEID")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<DateTime?>("Maturity")
                        .HasColumnType("DATE")
                        .HasColumnName("MATURITY");

                    b.Property<string>("PartpnRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("PARTPN_REF")
                        .IsFixedLength();

                    b.Property<DateTime?>("Pastduedte")
                        .HasColumnType("DATE")
                        .HasColumnName("PASTDUEDTE");

                    b.Property<string>("Pedoramt")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("PEDORAMT")
                        .IsFixedLength();

                    b.Property<string>("Prodcut")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("PRODCUT")
                        .IsFixedLength();

                    b.Property<string>("Prodtypedesc")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("PRODTYPEDESC")
                        .IsFixedLength();

                    b.Property<string>("Prodtypename")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(10)")
                        .HasColumnName("PRODTYPENAME")
                        .IsFixedLength();

                    b.Property<decimal?>("Ptnshare")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PTNSHARE");

                    b.Property<string>("RateType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("RATE_TYPE")
                        .IsFixedLength();

                    b.Property<long?>("Recamt")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("RECAMT");

                    b.Property<decimal?>("RecamtPd")
                        .HasColumnType("NUMBER")
                        .HasColumnName("RECAMT_PD");

                    b.Property<decimal?>("RecamtPdEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("RECAMT_PD_EGP");

                    b.Property<string>("Recccy")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("RECCCY");

                    b.Property<string>("RecccyPd")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("RECCCY_PD")
                        .IsFixedLength();

                    b.Property<string>("Schratetype")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("SCHRATETYPE")
                        .IsFixedLength();

                    b.Property<string>("Sovalue")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE");

                    b.Property<string>("SplitTier")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("SPLIT_TIER")
                        .IsFixedLength();

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("DATE")
                        .HasColumnName("STARTDATE");

                    b.Property<string>("SwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("SwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("SwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("SwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_LOC")
                        .IsFixedLength();

                    b.Property<long?>("TierAmt")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("TIER_AMT");

                    b.Property<string>("TierBase")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(5)")
                        .HasColumnName("TIER_BASE")
                        .IsFixedLength();

                    b.Property<string>("TierDiff")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("TIER_DIFF")
                        .IsFixedLength();

                    b.Property<decimal?>("TierNum")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TIER_NUM");

                    b.Property<decimal?>("TierPnum")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TIER_PNUM");

                    b.Property<string>("TierPunit")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("TIER_PUNIT")
                        .IsFixedLength();

                    b.Property<decimal?>("TierSprd")
                        .HasColumnType("NUMBER(11,7)")
                        .HasColumnName("TIER_SPRD");

                    b.ToView("ART_TI_FINAN_INTER_ACCRUALS");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiFullJournalReport", b =>
                {
                    b.Property<string>("Area")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(24)")
                        .HasColumnName("AREA");

                    b.Property<string>("AreaCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("AREA_CODE")
                        .IsFixedLength();

                    b.Property<string>("DataAfter")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("DATA_AFTER");

                    b.Property<string>("Databefore")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("DATABEFORE");

                    b.Property<string>("Dataitem")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(40)")
                        .HasColumnName("DATAITEM")
                        .IsFixedLength();

                    b.Property<DateTime?>("Datetime")
                        .HasColumnType("DATE")
                        .HasColumnName("DATETIME");

                    b.Property<DateTime?>("Entrytimeutc")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("ENTRYTIMEUTC");

                    b.Property<decimal?>("Jkey")
                        .HasColumnType("NUMBER(20)")
                        .HasColumnName("JKEY");

                    b.Property<string>("Mcaction")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("MCACTION");

                    b.Property<string>("Mcmtcetype")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("MCMTCETYPE");

                    b.Property<string>("Mcnote")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("MCNOTE");

                    b.Property<decimal?>("Mcowner")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MCOWNER");

                    b.Property<string>("Mcusername")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MCUSERNAME");

                    b.Property<string>("MtceType")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("MTCE_TYPE");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("USERNAME")
                        .IsFixedLength();

                    b.ToView("ART_TI_FULL_JOURNAL_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiInterfaceDetailsReport", b =>
                {
                    b.Property<string>("Gz361d1f")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GZ361D1F")
                        .IsFixedLength();

                    b.Property<decimal?>("Gz361mdt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZ361MDT");

                    b.Property<decimal?>("Gz361ncd")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZ361NCD");

                    b.Property<decimal?>("Gz361rat")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZ361RAT");

                    b.Property<decimal?>("Gz361sdt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZ361SDT");

                    b.Property<decimal?>("Gzamt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZAMT");

                    b.Property<decimal?>("GzamtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZAMT_EGP");

                    b.Property<string>("Gzbrnm")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("GZBRNM")
                        .IsFixedLength();

                    b.Property<string>("Gzccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("GZCCY");

                    b.Property<string>("Gzcus1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("GZCUS1");

                    b.Property<string>("Gzdlp")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("GZDLP")
                        .IsFixedLength();

                    b.Property<decimal?>("Gzg331ext")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZG331EXT");

                    b.Property<decimal?>("Gzg331pam")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZG331PAM");

                    b.Property<string>("Gzg331pccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("GZG331PCCY");

                    b.Property<string>("Gzg331pced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GZG331PCED");

                    b.Property<string>("Gzg331psd1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("GZG331PSD1");

                    b.Property<decimal?>("Gzg331purd")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZG331PURD");

                    b.Property<decimal?>("Gzg331sam")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZG331SAM");

                    b.Property<string>("Gzg331sccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("GZG331SCCY");

                    b.Property<string>("Gzg331sced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GZG331SCED");

                    b.Property<decimal?>("Gzg331sled")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZG331SLED");

                    b.Property<string>("Gzg361ced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("GZG361CED")
                        .IsFixedLength();

                    b.Property<decimal?>("Gzg461ext")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZG461EXT");

                    b.Property<string>("Gzg461pccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("GZG461PCCY");

                    b.Property<string>("Gzg461pced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GZG461PCED");

                    b.Property<string>("Gzg461psd1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("GZG461PSD1");

                    b.Property<string>("Gzg461sccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("GZG461SCCY");

                    b.Property<string>("Gzg461sced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GZG461SCED");

                    b.Property<decimal?>("Gzg461tpam")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZG461TPAM");

                    b.Property<decimal?>("Gzg461tprd")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZG461TPRD");

                    b.Property<decimal?>("Gzg461tsam")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZG461TSAM");

                    b.Property<decimal?>("Gzg461tsld")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZG461TSLD");

                    b.Property<string>("Gzg891acc")
                        .HasMaxLength(34)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(34)")
                        .HasColumnName("GZG891ACC");

                    b.Property<string>("Gzg891ccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("GZG891CCY");

                    b.Property<string>("Gzg891ced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GZG891CED");

                    b.Property<decimal?>("Gzg891dte")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GZG891DTE");

                    b.Property<string>("Gzh97nacc")
                        .HasMaxLength(34)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(34)")
                        .HasColumnName("GZH97NACC");

                    b.Property<string>("Gzh97nact")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("GZH97NACT");

                    b.Property<string>("Gzh97nactc")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("GZH97NACTC");

                    b.Property<string>("Gzh97nanmd")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("GZH97NANMD");

                    b.Property<string>("Gzh97nboacc")
                        .HasMaxLength(34)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(34)")
                        .HasColumnName("GZH97NBOACC");

                    b.Property<string>("Gzh97nca2")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("GZH97NCA2");

                    b.Property<string>("Gzh97nced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GZH97NCED");

                    b.Property<string>("Gzh97nctp1")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("GZH97NCTP1");

                    b.Property<string>("Gzh97nean1")
                        .HasMaxLength(34)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(34)")
                        .HasColumnName("GZH97NEAN1");

                    b.Property<string>("Gzh97nean2")
                        .HasMaxLength(34)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(34)")
                        .HasColumnName("GZH97NEAN2");

                    b.Property<string>("Gzh97nnegp")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("GZH97NNEGP");

                    b.Property<string>("Gzh97nnr1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("GZH97NNR1");

                    b.Property<string>("Gzh97nnr2")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("GZH97NNR2");

                    b.Property<string>("Gzh97nnr3")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("GZH97NNR3");

                    b.Property<string>("Gzh97nnr4")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("GZH97NNR4");

                    b.Property<string>("Gzh97npc")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("GZH97NPC");

                    b.Property<string>("Gzh97nrecn")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(17)")
                        .HasColumnName("GZH97NRECN");

                    b.Property<string>("Gzh97nsrc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("GZH97NSRC");

                    b.Property<string>("Gzh97ntcd")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("GZH97NTCD");

                    b.Property<string>("Gzh97nuc1")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("GZH97NUC1");

                    b.Property<string>("Gzh97nuc2")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("GZH97NUC2");

                    b.Property<string>("Reference")
                        .HasMaxLength(27)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(27)")
                        .HasColumnName("REFERENCE");

                    b.Property<string>("Tranid")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("TRANID")
                        .IsFixedLength();

                    b.Property<string>("Tretxt")
                        .HasMaxLength(132)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(132)")
                        .HasColumnName("TRETXT");

                    b.Property<string>("Trfile")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(10)")
                        .HasColumnName("TRFILE")
                        .IsFixedLength();

                    b.Property<int?>("Trseq")
                        .HasPrecision(7)
                        .HasColumnType("NUMBER(7)")
                        .HasColumnName("TRSEQ");

                    b.Property<string>("Trstat")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("TRSTAT")
                        .IsFixedLength();

                    b.Property<string>("Trtype")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("TRTYPE")
                        .IsFixedLength();

                    b.Property<string>("UserCodes")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(14)")
                        .HasColumnName("USER_CODES");

                    b.Property<string>("UserOptions")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(9)")
                        .HasColumnName("USER_OPTIONS");

                    b.Property<DateTime?>("ValueDate")
                        .HasColumnType("DATE")
                        .HasColumnName("VALUE_DATE");

                    b.ToView("ART_TI_INTERFACE_DETAILS_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiMasterEventHistory", b =>
                {
                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT");

                    b.Property<decimal?>("AmountEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT_EGP");

                    b.Property<DateTime?>("Bookoffdat")
                        .HasColumnType("DATE")
                        .HasColumnName("BOOKOFFDAT");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BRANCH_CODE")
                        .IsFixedLength();

                    b.Property<string>("BranchName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("Ccy")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("CCY");

                    b.Property<string>("CrossRef")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(30)")
                        .HasColumnName("CROSS_REF")
                        .IsFixedLength();

                    b.Property<string>("CusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM")
                        .IsFixedLength();

                    b.Property<DateTime?>("DeactDate")
                        .HasColumnType("DATE")
                        .HasColumnName("DEACT_DATE");

                    b.Property<string>("EventRef")
                        .HasMaxLength(44)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(44)")
                        .HasColumnName("EVENT_REF");

                    b.Property<DateTime?>("ExpiryDat")
                        .HasColumnType("DATE")
                        .HasColumnName("EXPIRY_DAT");

                    b.Property<string>("Extrainfo")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("EXTRAINFO");

                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("Isfinished")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ISFINISHED")
                        .IsFixedLength();

                    b.Property<string>("Language")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("LANGUAGE")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<decimal?>("Outstamt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT");

                    b.Property<decimal?>("OutstamtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT_EGP");

                    b.Property<string>("Outstccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("OUTSTCCY")
                        .IsFixedLength();

                    b.Property<string>("Product")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("PRODUCT")
                        .IsFixedLength();

                    b.Property<string>("Shortname")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("SHORTNAME");

                    b.Property<string>("Started")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("STARTED");

                    b.Property<DateTime?>("StartedFilter")
                        .HasColumnType("DATE")
                        .HasColumnName("STARTED_FILTER");

                    b.Property<string>("Status")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("STATUS")
                        .IsFixedLength();

                    b.Property<string>("StatusEv")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(45)")
                        .HasColumnName("STATUS_EV")
                        .IsFixedLength();

                    b.Property<string>("StepStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("STEP_STATUS");

                    b.Property<string>("Stepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("STEPDESCR");

                    b.Property<decimal>("Stepkey")
                        .HasColumnType("NUMBER(20)")
                        .HasColumnName("STEPKEY");

                    b.Property<string>("SwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("SwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("SwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("SwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_LOC")
                        .IsFixedLength();

                    b.Property<string>("Team")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(15)")
                        .HasColumnName("TEAM")
                        .IsFixedLength();

                    b.ToView("ART_TI_MASTER_EVENT_HISTORY");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiMastevehistProdFilter", b =>
                {
                    b.Property<string>("Product")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("PRODUCT")
                        .IsFixedLength();

                    b.ToView("ART_TI_MASTEVEHIST_PROD_FILTER");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiMastevehistStatusFilter", b =>
                {
                    b.Property<string>("Status")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("STATUS")
                        .IsFixedLength();

                    b.ToView("ART_TI_MASTEVEHIST_STATUS_FILTER");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiOsActivityReport", b =>
                {
                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT");

                    b.Property<decimal?>("AmountEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT_EGP");

                    b.Property<string>("BranchName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("Ccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CCY")
                        .IsFixedLength();

                    b.Property<string>("Descrip")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("DESCRIP")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("Product")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("PRODUCT");

                    b.Property<string>("Team")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("TEAM")
                        .IsFixedLength();

                    b.ToView("ART_TI_OS_ACTIVITY_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiOsLiabilityReport", b =>
                {
                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("LiabCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("LIAB_CCY")
                        .IsFixedLength();

                    b.Property<string>("Sovalue")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE");

                    b.Property<decimal?>("Totliabamt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTLIABAMT");

                    b.Property<decimal?>("TotliabamtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTLIABAMT_EGP");

                    b.ToView("ART_TI_OS_LIABILITY_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiOsTransAwaitiApprlReport", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT");

                    b.Property<decimal?>("AmountEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT_EGP");

                    b.Property<string>("BhalfBrn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BHALF_BRN")
                        .IsFixedLength();

                    b.Property<string>("Ccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CCY")
                        .IsFixedLength();

                    b.Property<string>("CcyCed")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("CCY_CED")
                        .IsFixedLength();

                    b.Property<string>("Descr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("DESCR")
                        .IsFixedLength();

                    b.Property<string>("Descri56")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("DESCRI56")
                        .IsFixedLength();

                    b.Property<string>("EventReference")
                        .HasMaxLength(44)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(44)")
                        .HasColumnName("EVENT_REFERENCE");

                    b.Property<string>("Fullname")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("FULLNAME");

                    b.Property<string>("Isfinished")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ISFINISHED")
                        .IsFixedLength();

                    b.Property<string>("Language")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("LANGUAGE")
                        .IsFixedLength();

                    b.Property<string>("Lstmoduser")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("LSTMODUSER")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("NpcpAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("NPCP_ADDRESS1")
                        .IsFixedLength();

                    b.Property<string>("NpcpCusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("NPCP_CUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("NpcpGfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("NPCP_GFCUN")
                        .IsFixedLength();

                    b.Property<string>("NpcpSwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("NPCP_SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("NpcpSwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("NPCP_SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("NpcpSwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("NPCP_SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("NpcpSwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("NPCP_SW_LOC")
                        .IsFixedLength();

                    b.Property<string>("PcpAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("PCP_ADDRESS1")
                        .IsFixedLength();

                    b.Property<string>("PcpCusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("PCP_CUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("PcpGfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("PCP_GFCUN")
                        .IsFixedLength();

                    b.Property<string>("PcpSwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("PCP_SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("PcpSwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("PCP_SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("PcpSwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("PCP_SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("PcpSwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("PCP_SW_LOC")
                        .IsFixedLength();

                    b.Property<string>("RefnoPfix")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("REFNO_PFIX")
                        .IsFixedLength();

                    b.Property<decimal?>("RefnoSerl")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REFNO_SERL");

                    b.Property<string>("Shortname")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("SHORTNAME");

                    b.Property<DateTime?>("Started")
                        .HasPrecision(9)
                        .HasColumnType("TIMESTAMP(9)")
                        .HasColumnName("STARTED");

                    b.Property<string>("Status")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(9)")
                        .HasColumnName("STATUS");

                    b.Property<DateTime?>("Touched")
                        .HasColumnType("DATE")
                        .HasColumnName("TOUCHED");

                    b.Property<string>("Type")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("TYPE")
                        .IsFixedLength();

                    b.Property<string>("Workgroup")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(15)")
                        .HasColumnName("WORKGROUP")
                        .IsFixedLength();

                    b.ToView("ART_TI_OS_TRANS_AWAITI_APPRL_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiOsTransByGatewayReport", b =>
                {
                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT");

                    b.Property<decimal?>("AmountEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT_EGP");

                    b.Property<string>("BhalfBrn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BHALF_BRN")
                        .IsFixedLength();

                    b.Property<string>("Ccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CCY")
                        .IsFixedLength();

                    b.Property<string>("Country")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("COUNTRY")
                        .IsFixedLength();

                    b.Property<DateTime?>("CtrctDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CTRCT_DATE");

                    b.Property<string>("CusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("Descrip")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("DESCRIP")
                        .IsFixedLength();

                    b.Property<DateTime?>("ExpiryDat")
                        .HasColumnType("DATE")
                        .HasColumnName("EXPIRY_DAT");

                    b.Property<string>("Fullname")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("FULLNAME");

                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("Outccysei")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("OUTCCYSEI")
                        .IsFixedLength();

                    b.Property<decimal?>("Outstamt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT");

                    b.Property<decimal?>("OutstamtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT_EGP");

                    b.Property<string>("Outstccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("OUTSTCCY")
                        .IsFixedLength();

                    b.Property<string>("Partptd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("PARTPTD")
                        .IsFixedLength();

                    b.Property<string>("Prodcode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("PRODCODE")
                        .IsFixedLength();

                    b.Property<string>("Relmstrref")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("RELMSTRREF")
                        .IsFixedLength();

                    b.Property<DateTime?>("RevNext")
                        .HasColumnType("DATE")
                        .HasColumnName("REV_NEXT");

                    b.Property<string>("Revolving")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("REVOLVING")
                        .IsFixedLength();

                    b.Property<string>("Sovalue")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE");

                    b.Property<string>("Sovalue1")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE1");

                    b.Property<string>("Status")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("STATUS")
                        .IsFixedLength();

                    b.Property<string>("SwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("SwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("SwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("SwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_LOC")
                        .IsFixedLength();

                    b.Property<decimal?>("Typeflag")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TYPEFLAG");

                    b.ToView("ART_TI_OS_TRANS_BY_GATEWAY_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiOsTransByNonpriReport", b =>
                {
                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT");

                    b.Property<decimal?>("AmountEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT_EGP");

                    b.Property<string>("BhalfBrn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BHALF_BRN")
                        .IsFixedLength();

                    b.Property<string>("BranchName")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("Ccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CCY")
                        .IsFixedLength();

                    b.Property<string>("Code79")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("CODE79")
                        .IsFixedLength();

                    b.Property<string>("Country")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("COUNTRY")
                        .IsFixedLength();

                    b.Property<DateTime?>("CtrctDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CTRCT_DATE");

                    b.Property<string>("CusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("Descrip")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("DESCRIP")
                        .IsFixedLength();

                    b.Property<DateTime?>("ExpiryDat")
                        .HasColumnType("DATE")
                        .HasColumnName("EXPIRY_DAT");

                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("Outccysei")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("OUTCCYSEI")
                        .IsFixedLength();

                    b.Property<decimal?>("Outstamt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT");

                    b.Property<decimal?>("OutstamtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT_EGP");

                    b.Property<string>("Outstccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("OUTSTCCY")
                        .IsFixedLength();

                    b.Property<string>("Partptd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("PARTPTD")
                        .IsFixedLength();

                    b.Property<string>("Relmstrref")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("RELMSTRREF")
                        .IsFixedLength();

                    b.Property<DateTime?>("RevNext")
                        .HasColumnType("DATE")
                        .HasColumnName("REV_NEXT");

                    b.Property<string>("Revolving")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("REVOLVING")
                        .IsFixedLength();

                    b.Property<string>("Sovalue")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE");

                    b.Property<string>("Sovalue1")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE1");

                    b.Property<string>("Status")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("STATUS")
                        .IsFixedLength();

                    b.Property<string>("SwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("SwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("SwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("SwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_LOC")
                        .IsFixedLength();

                    b.Property<decimal?>("Typeflag")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TYPEFLAG");

                    b.ToView("ART_TI_OS_TRANS_BY_NONPRI_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiOsTransByPrincipalReport", b =>
                {
                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT");

                    b.Property<decimal?>("AmountEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT_EGP");

                    b.Property<string>("BhalfBrn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BHALF_BRN")
                        .IsFixedLength();

                    b.Property<string>("Ccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CCY")
                        .IsFixedLength();

                    b.Property<string>("CcyCed")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("CCY_CED")
                        .IsFixedLength();

                    b.Property<string>("Code79")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("CODE79")
                        .IsFixedLength();

                    b.Property<string>("Country")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("COUNTRY")
                        .IsFixedLength();

                    b.Property<DateTime?>("CtrctDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CTRCT_DATE");

                    b.Property<string>("CusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("Descrip")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("DESCRIP")
                        .IsFixedLength();

                    b.Property<DateTime?>("ExpiryDat")
                        .HasColumnType("DATE")
                        .HasColumnName("EXPIRY_DAT");

                    b.Property<string>("Fullname")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("FULLNAME");

                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("Outccyced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("OUTCCYCED")
                        .IsFixedLength();

                    b.Property<string>("Outccysei")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("OUTCCYSEI")
                        .IsFixedLength();

                    b.Property<decimal?>("Outccyspt")
                        .HasColumnType("NUMBER(28,20)")
                        .HasColumnName("OUTCCYSPT");

                    b.Property<decimal?>("Outstamt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT");

                    b.Property<decimal?>("OutstamtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT_EGP");

                    b.Property<string>("Outstccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("OUTSTCCY")
                        .IsFixedLength();

                    b.Property<string>("Partptd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("PARTPTD")
                        .IsFixedLength();

                    b.Property<string>("Relmstrref")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("RELMSTRREF")
                        .IsFixedLength();

                    b.Property<DateTime?>("RevNext")
                        .HasColumnType("DATE")
                        .HasColumnName("REV_NEXT");

                    b.Property<string>("Revolving")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("REVOLVING")
                        .IsFixedLength();

                    b.Property<string>("Sovalue")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE");

                    b.Property<string>("Sovalue1")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE1");

                    b.Property<string>("Status")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("STATUS")
                        .IsFixedLength();

                    b.Property<string>("SwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("SwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("SwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("SwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_LOC")
                        .IsFixedLength();

                    b.Property<decimal?>("Typeflag")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TYPEFLAG");

                    b.ToView("ART_TI_OS_TRANS_BY_PRINCIPAL_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiPeriodicChrgsPayReport", b =>
                {
                    b.Property<decimal?>("AccrueAmt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ACCRUE_AMT");

                    b.Property<decimal?>("AccrueAmtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ACCRUE_AMT_EGP");

                    b.Property<string>("AccrueCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("ACCRUE_CCY")
                        .IsFixedLength();

                    b.Property<string>("BhalfBrn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BHALF_BRN")
                        .IsFixedLength();

                    b.Property<decimal?>("ChargeAmt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CHARGE_AMT");

                    b.Property<decimal?>("ChargeAmtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CHARGE_AMT_EGP");

                    b.Property<string>("ChargeCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CHARGE_CCY")
                        .IsFixedLength();

                    b.Property<string>("ChgCusMnm1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CHG_CUS_MNM1")
                        .IsFixedLength();

                    b.Property<string>("ChgGfcun1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("CHG_GFCUN1")
                        .IsFixedLength();

                    b.Property<string>("ChgSwBank1")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("CHG_SW_BANK1")
                        .IsFixedLength();

                    b.Property<string>("ChgSwBranch1")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CHG_SW_BRANCH1")
                        .IsFixedLength();

                    b.Property<string>("ChgSwCtr1")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("CHG_SW_CTR1")
                        .IsFixedLength();

                    b.Property<string>("ChgSwLoc1")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("CHG_SW_LOC1")
                        .IsFixedLength();

                    b.Property<string>("Chgpextraday")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("CHGPEXTRADAY");

                    b.Property<DateTime?>("Ddate")
                        .HasColumnType("DATE")
                        .HasColumnName("DDATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("DESCR")
                        .IsFixedLength();

                    b.Property<string>("Descr1")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("DESCR1")
                        .IsFixedLength();

                    b.Property<DateTime?>("EndDat")
                        .HasColumnType("DATE")
                        .HasColumnName("END_DAT");

                    b.Property<string>("Firststart")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("FIRSTSTART")
                        .IsFixedLength();

                    b.Property<string>("Fullname")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("FULLNAME");

                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(10)")
                        .HasColumnName("ID")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("NpcpAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("NPCP_ADDRESS1")
                        .IsFixedLength();

                    b.Property<string>("NpcpAddress11")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("NPCP_ADDRESS11")
                        .IsFixedLength();

                    b.Property<string>("NpcpCusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("NPCP_CUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("NpcpGfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("NPCP_GFCUN")
                        .IsFixedLength();

                    b.Property<string>("NpcpSwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("NPCP_SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("NpcpSwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("NPCP_SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("NpcpSwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("NPCP_SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("NpcpSwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("NPCP_SW_LOC")
                        .IsFixedLength();

                    b.Property<string>("Outccyced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("OUTCCYCED")
                        .IsFixedLength();

                    b.Property<decimal?>("Outstamt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT");

                    b.Property<decimal?>("OutstamtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT_EGP");

                    b.Property<string>("Outstccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("OUTSTCCY")
                        .IsFixedLength();

                    b.Property<string>("Payrec")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("PAYREC");

                    b.Property<string>("PcpAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("PCP_ADDRESS1")
                        .IsFixedLength();

                    b.Property<string>("PcpCusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("PCP_CUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("PcpGfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("PCP_GFCUN")
                        .IsFixedLength();

                    b.Property<string>("PcpSwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("PCP_SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("PcpSwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("PCP_SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("PcpSwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("PCP_SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("PcpSwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("PCP_SW_LOC")
                        .IsFixedLength();

                    b.Property<string>("Relmstrref")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("RELMSTRREF")
                        .IsFixedLength();

                    b.Property<decimal?>("SchAmt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SCH_AMT");

                    b.Property<decimal?>("SchAmtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SCH_AMT_EGP");

                    b.Property<string>("SchCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SCH_CCY")
                        .IsFixedLength();

                    b.Property<string>("Sovalue")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE");

                    b.Property<DateTime?>("StartDat")
                        .HasColumnType("DATE")
                        .HasColumnName("START_DAT");

                    b.Property<string>("SuppAcc")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("SUPP_ACC")
                        .IsFixedLength();

                    b.Property<string>("Workgroup")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(15)")
                        .HasColumnName("WORKGROUP")
                        .IsFixedLength();

                    b.ToView("ART_TI_PERIODIC_CHRGS_PAY_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiPeriodicChrgsReport", b =>
                {
                    b.Property<decimal?>("AccrueAmt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ACCRUE_AMT");

                    b.Property<decimal?>("AccrueAmtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ACCRUE_AMT_EGP");

                    b.Property<string>("AccrueCcy")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("ACCRUE_CCY");

                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength();

                    b.Property<string>("AdvArr")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("ADV_ARR");

                    b.Property<string>("BhalfBrn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BHALF_BRN")
                        .IsFixedLength();

                    b.Property<decimal?>("ChargeAmt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CHARGE_AMT");

                    b.Property<decimal?>("ChargeAmtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CHARGE_AMT_EGP");

                    b.Property<string>("ChargeCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CHARGE_CCY")
                        .IsFixedLength();

                    b.Property<string>("Chgpextraday")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("CHGPEXTRADAY");

                    b.Property<string>("CusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("CUS_MNM")
                        .IsFixedLength();

                    b.Property<decimal?>("DailyAcc")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DAILY_ACC");

                    b.Property<string>("Descr")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("DESCR")
                        .IsFixedLength();

                    b.Property<string>("Descri56")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("DESCRI56")
                        .IsFixedLength();

                    b.Property<DateTime?>("EndDat")
                        .HasColumnType("DATE")
                        .HasColumnName("END_DAT");

                    b.Property<string>("Firststart")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("FIRSTSTART")
                        .IsFixedLength();

                    b.Property<string>("Fullname")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("FULLNAME");

                    b.Property<string>("Gfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("GFCUN")
                        .IsFixedLength();

                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(10)")
                        .HasColumnName("ID")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("Outccyced")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("OUTCCYCED")
                        .IsFixedLength();

                    b.Property<decimal?>("Outstamt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT");

                    b.Property<decimal?>("OutstamtEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OUTSTAMT_EGP");

                    b.Property<string>("Outstccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("OUTSTCCY")
                        .IsFixedLength();

                    b.Property<string>("Payrec")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("PAYREC")
                        .IsFixedLength();

                    b.Property<string>("Periodic")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("PERIODIC")
                        .IsFixedLength();

                    b.Property<string>("Relmstrref")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("RELMSTRREF");

                    b.Property<string>("Sovalue")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("SOVALUE");

                    b.Property<DateTime?>("StartDat")
                        .HasColumnType("DATE")
                        .HasColumnName("START_DAT");

                    b.Property<string>("SuppAcc")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("SUPP_ACC")
                        .IsFixedLength();

                    b.Property<string>("SwBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("SW_BANK")
                        .IsFixedLength();

                    b.Property<string>("SwBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("SW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("SwCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_CTR")
                        .IsFixedLength();

                    b.Property<string>("SwLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("SW_LOC")
                        .IsFixedLength();

                    b.Property<string>("Workgroup")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(15)")
                        .HasColumnName("WORKGROUP")
                        .IsFixedLength();

                    b.ToView("ART_TI_PERIODIC_CHRGS_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiSystemTailoringReport", b =>
                {
                    b.Property<string>("AccSrc")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("ACC_SRC");

                    b.Property<decimal?>("ActualAmt")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ACTUAL_AMT");

                    b.Property<DateTime?>("Amberdate")
                        .HasColumnType("DATE")
                        .HasColumnName("AMBERDATE");

                    b.Property<decimal?>("Amberdays")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMBERDAYS");

                    b.Property<decimal?>("Amberrsecs")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMBERRSECS");

                    b.Property<string>("Ambertime")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("AMBERTIME");

                    b.Property<string>("Amendchg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("AMENDCHG")
                        .IsFixedLength();

                    b.Property<long?>("Amount43")
                        .HasPrecision(15)
                        .HasColumnType("NUMBER(15)")
                        .HasColumnName("AMOUNT43");

                    b.Property<string>("AmtCcy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AMT_CCY");

                    b.Property<string>("AmtField")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AMT_FIELD");

                    b.Property<string>("Attachment")
                        .HasMaxLength(27)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(27)")
                        .HasColumnName("ATTACHMENT");

                    b.Property<string>("Autoprint")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTOPRINT");

                    b.Property<string>("AvailType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AVAIL_TYPE");

                    b.Property<string>("Bsparamsetdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("BSPARAMSETDESCR")
                        .IsFixedLength();

                    b.Property<string>("Bsparamsetid")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(30)")
                        .HasColumnName("BSPARAMSETID")
                        .IsFixedLength();

                    b.Property<string>("Btinitstepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("BTINITSTEPDESCR");

                    b.Property<string>("Btinitstepid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("BTINITSTEPID");

                    b.Property<string>("Btrejstepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("BTREJSTEPDESCR");

                    b.Property<string>("Btrejstepid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("BTREJSTEPID");

                    b.Property<string>("Canamdbas")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("CANAMDBAS")
                        .IsFixedLength();

                    b.Property<string>("ChkLimit")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CHK_LIMIT");

                    b.Property<string>("Contingent")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CONTINGENT");

                    b.Property<string>("Curren64")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CURREN64")
                        .IsFixedLength();

                    b.Property<DateTime?>("Date71")
                        .HasColumnType("DATE")
                        .HasColumnName("DATE71");

                    b.Property<string>("DateType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("DATE_TYPE")
                        .IsFixedLength();

                    b.Property<string>("Dateab63")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("DATEAB63")
                        .IsFixedLength();

                    b.Property<DateTime?>("Deadlinedate")
                        .HasColumnType("DATE")
                        .HasColumnName("DEADLINEDATE");

                    b.Property<decimal?>("Deadlinedays")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DEADLINEDAYS");

                    b.Property<decimal?>("Deadlinersecs")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DEADLINERSECS");

                    b.Property<string>("Deadlinetime")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("DEADLINETIME");

                    b.Property<string>("Debitcredit")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DEBITCREDIT");

                    b.Property<string>("Dombehaviour")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DOMBEHAVIOUR");

                    b.Property<string>("Domcode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("DOMCODE");

                    b.Property<string>("Domdefault")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DOMDEFAULT");

                    b.Property<string>("Domlinkcode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("DOMLINKCODE");

                    b.Property<string>("Domlinkname")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("DOMLINKNAME");

                    b.Property<string>("Domname")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("DOMNAME");

                    b.Property<string>("Domtype")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DOMTYPE");

                    b.Property<string>("ErrorText")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(250)")
                        .HasColumnName("ERROR_TEXT");

                    b.Property<string>("Eventlongname")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("EVENTLONGNAME")
                        .IsFixedLength();

                    b.Property<string>("Field2Src")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("FIELD2_SRC")
                        .IsFixedLength();

                    b.Property<string>("Fromstepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("FROMSTEPDESCR");

                    b.Property<string>("Fromstepid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("FROMSTEPID");

                    b.Property<string>("Gwinitstepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("GWINITSTEPDESCR");

                    b.Property<string>("Gwinitstepid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("GWINITSTEPID");

                    b.Property<string>("Gwrejstepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("GWREJSTEPDESCR");

                    b.Property<string>("Gwrejstepid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("GWREJSTEPID");

                    b.Property<decimal?>("Intege18")
                        .HasColumnType("NUMBER")
                        .HasColumnName("INTEGE18");

                    b.Property<string>("InternAcc")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("INTERN_ACC");

                    b.Property<string>("Intinitstepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("INTINITSTEPDESCR");

                    b.Property<string>("Intinitstepid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("INTINITSTEPID");

                    b.Property<string>("Inuse")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("INUSE");

                    b.Property<string>("Liabamttyp")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("LIABAMTTYP");

                    b.Property<string>("Liability")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("LIABILITY");

                    b.Property<string>("Mappingid")
                        .HasMaxLength(43)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(43)")
                        .HasColumnName("MAPPINGID");

                    b.Property<string>("Mappingsubid")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(45)")
                        .HasColumnName("MAPPINGSUBID");

                    b.Property<string>("Mappingtype")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(11)")
                        .HasColumnName("MAPPINGTYPE");

                    b.Property<string>("Mapstepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("MAPSTEPDESCR");

                    b.Property<string>("Mapstepid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("MAPSTEPID");

                    b.Property<string>("Margin")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("MARGIN");

                    b.Property<string>("Nextstepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("NEXTSTEPDESCR");

                    b.Property<string>("Nextstepid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("NEXTSTEPID");

                    b.Property<string>("Obsolete")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("OBSOLETE");

                    b.Property<string>("Operat44")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("OPERAT44")
                        .IsFixedLength();

                    b.Property<string>("Optional")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("OPTIONAL");

                    b.Property<string>("Paramsetdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("PARAMSETDESCR")
                        .IsFixedLength();

                    b.Property<string>("Paramsetid")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(30)")
                        .HasColumnName("PARAMSETID")
                        .IsFixedLength();

                    b.Property<string>("Postingtyp")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4)")
                        .HasColumnName("POSTINGTYP");

                    b.Property<string>("Prodlongname")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(254)")
                        .HasColumnName("PRODLONGNAME");

                    b.Property<string>("Projection")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("PROJECTION");

                    b.Property<DateTime?>("Reddate")
                        .HasColumnType("DATE")
                        .HasColumnName("REDDATE");

                    b.Property<decimal?>("Reddays")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REDDAYS");

                    b.Property<decimal?>("Redrsecs")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REDRSECS");

                    b.Property<string>("Redtime")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("REDTIME");

                    b.Property<string>("Rejstepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("REJSTEPDESCR");

                    b.Property<string>("Rejstepid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("REJSTEPID");

                    b.Property<string>("RelDate")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("REL_DATE")
                        .IsFixedLength();

                    b.Property<string>("Relati29")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("RELATI29")
                        .IsFixedLength();

                    b.Property<decimal?>("Relevmapkey")
                        .HasColumnType("NUMBER")
                        .HasColumnName("RELEVMAPKEY");

                    b.Property<string>("RevPstngs")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("REV_PSTNGS");

                    b.Property<decimal?>("Seq97")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SEQ97");

                    b.Property<decimal?>("Sequence")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SEQUENCE");

                    b.Property<string>("Severity")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("SEVERITY");

                    b.Property<decimal?>("StepTime")
                        .HasColumnType("NUMBER")
                        .HasColumnName("STEP_TIME");

                    b.Property<string>("Steptype")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("STEPTYPE");

                    b.Property<string>("Swinitstepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("SWINITSTEPDESCR");

                    b.Property<string>("Swinitstepid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("SWINITSTEPID");

                    b.Property<string>("Swrejstepdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("SWREJSTEPDESCR");

                    b.Property<string>("Swrejstepid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("SWREJSTEPID");

                    b.Property<string>("Teamcode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("TEAMCODE");

                    b.Property<string>("Teamdescr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("TEAMDESCR");

                    b.Property<string>("Templatedescr")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("TEMPLATEDESCR");

                    b.Property<string>("Templateid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("TEMPLATEID");

                    b.Property<string>("Trancode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("TRANCODE");

                    b.Property<string>("TransAcc")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("TRANS_ACC");

                    b.Property<string>("Trcrsdliab")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("TRCRSDLIAB");

                    b.Property<string>("Type24")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("TYPE24")
                        .IsFixedLength();

                    b.Property<decimal?>("Typeflag")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TYPEFLAG");

                    b.Property<string>("Useevtfm")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("USEEVTFM");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("USERNAME");

                    b.ToView("ART_TI_SYSTEM_TAILORING_REPORT");
                });

            modelBuilder.Entity("Data.Data.FTI.ArtTiWatchlistOsCheckReport", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT");

                    b.Property<decimal?>("AmountEgp")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AMOUNT_EGP");

                    b.Property<string>("BhalfBrn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(8)")
                        .HasColumnName("BHALF_BRN")
                        .IsFixedLength();

                    b.Property<string>("Ccy")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("CCY")
                        .IsFixedLength();

                    b.Property<string>("CcyCed")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("CCY_CED")
                        .IsFixedLength();

                    b.Property<string>("Descr")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("DESCR")
                        .IsFixedLength();

                    b.Property<string>("Descri56")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("DESCRI56")
                        .IsFixedLength();

                    b.Property<string>("Fullname")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("FULLNAME");

                    b.Property<string>("Isfinished")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ISFINISHED")
                        .IsFixedLength();

                    b.Property<string>("Language")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("LANGUAGE")
                        .IsFixedLength();

                    b.Property<string>("Longna85")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(60)")
                        .HasColumnName("LONGNA85")
                        .IsFixedLength();

                    b.Property<string>("Lstmoduser")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("LSTMODUSER")
                        .IsFixedLength();

                    b.Property<string>("MasterRef")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("MASTER_REF")
                        .IsFixedLength();

                    b.Property<string>("Npcpaddress1")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("NPCPADDRESS1");

                    b.Property<string>("NpcpcusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("NPCPCUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("Npcpgfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("NPCPGFCUN")
                        .IsFixedLength();

                    b.Property<string>("NpcpswBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("NPCPSW_BANK")
                        .IsFixedLength();

                    b.Property<string>("NpcpswBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("NPCPSW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("NpcpswCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("NPCPSW_CTR")
                        .IsFixedLength();

                    b.Property<string>("NpcpswLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("NPCPSW_LOC")
                        .IsFixedLength();

                    b.Property<string>("Pcpaddress1")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("PCPADDRESS1");

                    b.Property<string>("PcpcusMnm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(20)")
                        .HasColumnName("PCPCUS_MNM")
                        .IsFixedLength();

                    b.Property<string>("Pcpgfcun")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(35)")
                        .HasColumnName("PCPGFCUN")
                        .IsFixedLength();

                    b.Property<string>("PcpswBank")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("PCPSW_BANK")
                        .IsFixedLength();

                    b.Property<string>("PcpswBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("PCPSW_BRANCH")
                        .IsFixedLength();

                    b.Property<string>("PcpswCtr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("PCPSW_CTR")
                        .IsFixedLength();

                    b.Property<string>("PcpswLoc")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("PCPSW_LOC")
                        .IsFixedLength();

                    b.Property<string>("RefnoPfix")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("REFNO_PFIX")
                        .IsFixedLength();

                    b.Property<decimal?>("RefnoSerl")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REFNO_SERL");

                    b.Property<string>("Shortname")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("SHORTNAME");

                    b.Property<DateTime?>("Started")
                        .HasPrecision(9)
                        .HasColumnType("TIMESTAMP(9)")
                        .HasColumnName("STARTED");

                    b.Property<string>("Status")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(9)")
                        .HasColumnName("STATUS");

                    b.Property<DateTime?>("Touched")
                        .HasColumnType("DATE")
                        .HasColumnName("TOUCHED");

                    b.Property<string>("Type")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(2)")
                        .HasColumnName("TYPE")
                        .IsFixedLength();

                    b.Property<string>("Workgroup")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(15)")
                        .HasColumnName("WORKGROUP")
                        .IsFixedLength();

                    b.ToView("ART_TI_WATCHLIST_OS_CHECK_REPORT");
                });
#pragma warning restore 612, 618
        }
    }
}
