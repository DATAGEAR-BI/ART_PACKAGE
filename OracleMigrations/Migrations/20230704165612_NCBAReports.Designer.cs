// <auto-generated />
using System;
using ART_PACKAGE.Areas.Identity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace OracleMigrations.Migrations
{
    [DbContext(typeof(AuthContext))]
    [Migration("20230704165612_NCBAReports")]
    partial class NCBAReports
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ART")
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ART_PACKAGE.Areas.Identity.Data.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("AspNetUsers", "ART");

                    b.HasData(
                        new
                        {
                            Id = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "56105a32-16d2-4b5c-9b43-5fbd44d5818e",
                            Email = "Art_Admin@datagearbi.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ART_ADMIN@DATAGEARBI.COM",
                            NormalizedUserName = "ART_ADMIN@DATAGEARBI.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECeWd4lLkgwhk6Sis/ly31EZqXGLEC76YxY/QmbIDKiBOU+qkUUEc3tOk3/3OmwCag==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1391254f-75ad-411b-8ba8-a437f2390a4c",
                            TwoFactorEnabled = false,
                            UserName = "Art_Admin@datagearbi.com"
                        });
                });

            modelBuilder.Entity("ART_PACKAGE.Areas.Identity.Data.ArtSavedCustomReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Schema")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ArtSavedCustomReport", "ART");
                });

            modelBuilder.Entity("ART_PACKAGE.Areas.Identity.Data.ArtSavedReportsChart", b =>
                {
                    b.Property<int>("ReportId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Column")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("Type")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ReportId", "Column", "Type");

                    b.ToTable("ArtSavedReportsChart", "ART");
                });

            modelBuilder.Entity("ART_PACKAGE.Areas.Identity.Data.ArtSavedReportsColumns", b =>
                {
                    b.Property<int>("ReportId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Column")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("ReportId", "Column");

                    b.ToTable("ArtSavedReportsColumns", "ART");
                });

            modelBuilder.Entity("Data.Data.ArtAlertedEntity", b =>
                {
                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(64)")
                        .HasColumnName("CASE_ID");

                    b.Property<DateTime>("CreateDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Name")
                        .HasColumnType("CLOB")
                        .HasColumnName("NAME");

                    b.Property<string>("PepInd")
                        .HasColumnType("CLOB")
                        .HasColumnName("PEP_IND");

                    b.ToView("ART_ALERTED_ENTITY");
                });

            modelBuilder.Entity("Data.Data.ArtAmlAlertDetailView", b =>
                {
                    b.Property<string>("ActualValuesText")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ACTUAL_VALUES_TEXT");

                    b.Property<string>("AlertDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ALERT_DESCRIPTION");

                    b.Property<long?>("AlertId")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ALERT_ID");

                    b.Property<string>("AlertStatus")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ALERT_STATUS");

                    b.Property<string>("AlertSubCat")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ALERT_SUB_CAT");

                    b.Property<string>("AlertTypeCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("ALERT_TYPE_CD");

                    b.Property<string>("AlertedEntityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("ALERTED_ENTITY_NAME");

                    b.Property<string>("AlertedEntityNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ALERTED_ENTITY_NUMBER");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLOSE_DATE");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("EmployeeInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("EMPLOYEE_IND")
                        .IsFixedLength();

                    b.Property<int?>("InvestigationDays")
                        .HasColumnType("NUMBER")
                        .HasColumnName("INVESTIGATION_DAYS");

                    b.Property<int?>("MoneyLaunderingRiskScore")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("MONEY_LAUNDERING_RISK_SCORE");

                    b.Property<string>("OwnerUserid")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("OWNER_USERID");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("PARTY_TYPE_DESC");

                    b.Property<string>("PoliticallyExposedPersonInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("POLITICALLY_EXPOSED_PERSON_IND");

                    b.Property<string>("ReportCloseRsn")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("REPORT_CLOSE_RSN");

                    b.Property<DateTime?>("RunDate")
                        .HasColumnType("DATE")
                        .HasColumnName("RUN_DATE");

                    b.Property<long?>("ScenarioId")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("SCENARIO_ID");

                    b.Property<string>("ScenarioName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("SCENARIO_NAME");

                    b.ToView("ART_AML_ALERT_DETAIL_VIEW");
                });

            modelBuilder.Entity("Data.Data.ArtAmlCaseDetailsView", b =>
                {
                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("CaseCategory")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_CATEGORY");

                    b.Property<long?>("CaseId")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CasePriority")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_PRIORITY");

                    b.Property<string>("CaseStatus")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_STATUS");

                    b.Property<string>("CaseSubCategory")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_SUB_CATEGORY");

                    b.Property<DateTime?>("ClosedDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CLOSED_DATE");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("CREATED_BY");

                    b.Property<string>("EntityLevel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ENTITY_LEVEL");

                    b.Property<string>("EntityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("ENTITY_NAME");

                    b.Property<string>("EntityNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ENTITY_NUMBER");

                    b.Property<string>("Owner")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("OWNER");

                    b.ToView("ART_AML_CASE_DETAILS_VIEW");
                });

            modelBuilder.Entity("Data.Data.ArtAmlCustomersDetailsView", b =>
                {
                    b.Property<string>("ActiveFlg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ACTIVE_FLG")
                        .IsFixedLength();

                    b.Property<int?>("AnnualIncomeAmount")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ANNUAL_INCOME_AMOUNT");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("CitizenshipCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CITIZENSHIP_COUNTRY_NAME");

                    b.Property<string>("CityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("CITY_NAME");

                    b.Property<DateTime?>("CustomerDateOfBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("CUSTOMER_DATE_OF_BIRTH");

                    b.Property<string>("CustomerIdentificationId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("CUSTOMER_IDENTIFICATION_ID");

                    b.Property<string>("CustomerIdentificationType")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("CUSTOMER_IDENTIFICATION_TYPE")
                        .IsFixedLength();

                    b.Property<string>("CustomerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("CUSTOMER_NAME");

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CUSTOMER_NUMBER");

                    b.Property<DateTime?>("CustomerSinceDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CUSTOMER_SINCE_DATE");

                    b.Property<string>("CustomerStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CUSTOMER_STATUS");

                    b.Property<string>("CustomerTaxId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("CUSTOMER_TAX_ID");

                    b.Property<string>("CustomerType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CUSTOMER_TYPE");

                    b.Property<string>("DoingBusinessAsName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("DOING_BUSINESS_AS_NAME");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("EMAIL_ADDRESS");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("EMPLOYEE_NUMBER");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("EMPLOYER_NAME");

                    b.Property<string>("EmployerPhoneNumber")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("EMPLOYER_PHONE_NUMBER");

                    b.Property<string>("GovernorateName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("GOVERNORATE_NAME");

                    b.Property<string>("IndustryDesc")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("INDUSTRY_DESC");

                    b.Property<string>("IsEmployee")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("IS_EMPLOYEE")
                        .IsFixedLength();

                    b.Property<DateTime?>("LastRiskAssessmentDate")
                        .HasColumnType("DATE")
                        .HasColumnName("LAST_RISK_ASSESSMENT_DATE");

                    b.Property<string>("MailingAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("MAILING_ADDRESS_1");

                    b.Property<string>("MailingCityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("MAILING_CITY_NAME");

                    b.Property<string>("MailingCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("MAILING_COUNTRY_NAME");

                    b.Property<string>("MailingPostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(10)")
                        .HasColumnName("MAILING_POSTAL_CODE")
                        .IsFixedLength();

                    b.Property<string>("MaritalStatusDesc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MARITAL_STATUS_DESC");

                    b.Property<int?>("NetWorthAmount")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NET_WORTH_AMOUNT");

                    b.Property<string>("NonProfitOrgInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("NON_PROFIT_ORG_IND")
                        .IsFixedLength();

                    b.Property<string>("OccupationDesc")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("OCCUPATION_DESC");

                    b.Property<string>("PhoneNumber1")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("PHONE_NUMBER_1");

                    b.Property<string>("PhoneNumber2")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("PHONE_NUMBER_2");

                    b.Property<string>("PhoneNumber3")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("PHONE_NUMBER_3");

                    b.Property<string>("PoliticallyExposedPersonInd")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("POLITICALLY_EXPOSED_PERSON_IND")
                        .IsFixedLength();

                    b.Property<string>("ResidenceCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RESIDENCE_COUNTRY_NAME");

                    b.Property<string>("RiskClassification")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RISK_CLASSIFICATION");

                    b.Property<string>("StreetAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("STREET_ADDRESS_1");

                    b.Property<string>("StreetCountryCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("STREET_COUNTRY_CODE")
                        .IsFixedLength();

                    b.Property<string>("StreetCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("STREET_COUNTRY_NAME");

                    b.Property<string>("StreetPostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(10)")
                        .HasColumnName("STREET_POSTAL_CODE")
                        .IsFixedLength();

                    b.ToView("ART_AML_CUSTOMERS_DETAILS_VIEW");
                });

            modelBuilder.Entity("Data.Data.ArtAmlHighRiskCustView", b =>
                {
                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("CitizenshipCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CITIZENSHIP_COUNTRY_NAME");

                    b.Property<string>("MailingAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("MAILING_ADDRESS_1");

                    b.Property<string>("MailingCityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("MAILING_CITY_NAME");

                    b.Property<DateTime?>("PartyDateOfBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("PARTY_DATE_OF_BIRTH");

                    b.Property<string>("PartyIdentificationId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("PARTY_IDENTIFICATION_ID");

                    b.Property<string>("PartyIdentificationTypeDesc")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("PARTY_IDENTIFICATION_TYPE_DESC")
                        .IsFixedLength();

                    b.Property<string>("PartyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("PARTY_NAME");

                    b.Property<string>("PartyNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PARTY_NUMBER");

                    b.Property<string>("PartyTaxId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("PARTY_TAX_ID");

                    b.Property<string>("PartyTypeDesc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("PARTY_TYPE_DESC");

                    b.Property<string>("PhoneNumber1")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("PHONE_NUMBER_1");

                    b.Property<string>("PoliticallyExposedPersonInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("POLITICALLY_EXPOSED_PERSON_IND");

                    b.Property<string>("ResidenceCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RESIDENCE_COUNTRY_NAME");

                    b.Property<string>("RiskClassification")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RISK_CLASSIFICATION");

                    b.Property<string>("StreetAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("STREET_ADDRESS_1");

                    b.Property<string>("StreetCityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("STREET_CITY_NAME");

                    b.ToView("ART_AML_HIGH_RISK_CUST_VIEW");
                });

            modelBuilder.Entity("Data.Data.ArtAmlTriageView", b =>
                {
                    b.Property<int?>("AgeOldestAlert")
                        .HasPrecision(4)
                        .HasColumnType("NUMBER(4)")
                        .HasColumnName("AGE_OLDEST_ALERT");

                    b.Property<decimal?>("AggregateAmt")
                        .HasColumnType("NUMBER(15,3)")
                        .HasColumnName("AGGREGATE_AMT");

                    b.Property<string>("AlertedEntityLevel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ALERTED_ENTITY_LEVEL");

                    b.Property<string>("AlertedEntityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("ALERTED_ENTITY_NAME");

                    b.Property<string>("AlertedEntityNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ALERTED_ENTITY_NUMBER");

                    b.Property<int?>("AlertsCnt")
                        .HasPrecision(4)
                        .HasColumnType("NUMBER(4)")
                        .HasColumnName("ALERTS_CNT");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("OwnerUserid")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("OWNER_USERID");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RISK_SCORE");

                    b.ToView("ART_AML_TRIAGE_VIEW");
                });

            modelBuilder.Entity("Data.Data.ArtGoamlReportsDetail", b =>
                {
                    b.Property<string>("Action")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ACTION")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Currencycodelocal")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("CURRENCYCODELOCAL")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Entityreference")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("ENTITYREFERENCE")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Fiurefnumber")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("FIUREFNUMBER")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<int>("Id")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    b.Property<bool?>("Isvalid")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISVALID");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_UPDATED_DATE");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("LOCATION")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Priority")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("PRIORITY")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Reason")
                        .HasMaxLength(4000)
                        .HasColumnType("NCLOB")
                        .HasColumnName("REASON")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Rentitybranch")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("RENTITYBRANCH")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<int>("Rentityid")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RENTITYID");

                    b.Property<DateTime?>("Reportcloseddate")
                        .HasColumnType("datetime")
                        .HasColumnName("REPORTCLOSEDDATE");

                    b.Property<string>("Reportcode")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("REPORTCODE")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Reportcreatedby")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("REPORTCREATEDBY")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<DateTime?>("Reportcreateddate")
                        .HasColumnType("datetime")
                        .HasColumnName("REPORTCREATEDDATE");

                    b.Property<string>("Reportingpersontype")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("REPORTINGPERSONTYPE")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Reportrisksignificance")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("REPORTRISKSIGNIFICANCE")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Reportstatuscode")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("REPORTSTATUSCODE")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Reportuserlockid")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("REPORTUSERLOCKID")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Reportxml")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("REPORTXML")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Submissioncode")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("SUBMISSIONCODE")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<DateTime?>("Submissiondate")
                        .HasColumnType("datetime")
                        .HasColumnName("SUBMISSIONDATE");

                    b.Property<string>("Version")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("VERSION")
                        .UseCollation("Arabic_100_CI_AI");

                    b.ToView("ART_GOAML_REPORTS_DETAILS", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ArtGoamlReportsIndicator", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("DESCRIPTION")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Indicator")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("INDICATOR")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<int>("ReportId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("REPORT_ID");

                    b.ToView("ART_GOAML_REPORTS_INDICATORS", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ArtGoamlReportsSusbectParty", b =>
                {
                    b.Property<string>("Account")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("ACCOUNT")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("ACTIVITY");

                    b.Property<string>("Branch")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("BRANCH")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Entityreference")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("ENTITYREFERENCE")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Fiurefnumber")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("FIUREFNUMBER")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<int>("Id")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    b.Property<string>("PartyId")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("PARTY_ID")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("PartyName")
                        .HasMaxLength(765)
                        .HasColumnType("NVARCHAR2(765)")
                        .HasColumnName("PARTY_NAME")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<string>("Partynumber")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("PARTYNUMBER")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<DateTime?>("Reportcloseddate")
                        .HasColumnType("datetime")
                        .HasColumnName("REPORTCLOSEDDATE");

                    b.Property<string>("Reportcode")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("REPORTCODE")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<DateTime?>("Reportcreateddate")
                        .HasColumnType("datetime")
                        .HasColumnName("REPORTCREATEDDATE");

                    b.Property<string>("Reportstatuscode")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("REPORTSTATUSCODE")
                        .UseCollation("Arabic_100_CI_AI");

                    b.Property<DateTime?>("Submissiondate")
                        .HasColumnType("datetime")
                        .HasColumnName("SUBMISSIONDATE");

                    b.Property<string>("Transactionnumber")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("TRANSACTIONNUMBER")
                        .UseCollation("Arabic_100_CI_AI");

                    b.ToView("ART_GOAML_REPORTS_SUSBECT_PARTIES", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ArtGroupsAuditView", b =>
                {
                    b.Property<string>("Action")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("action");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("description");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("GroupName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("group_name");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("MemberUsers")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("member_users");

                    b.Property<string>("RoleNames")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("role_names");

                    b.Property<string>("SubGroupNames")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("sub_group_names");

                    b.ToView("ART_GROUPS_AUDIT_VIEW", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ArtRiskAssessmentView", b =>
                {
                    b.Property<string>("AssessmentCategoryCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("ASSESSMENT_CATEGORY_CD");

                    b.Property<string>("AssessmentSubcategoryCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("ASSESSMENT_SUBCATEGORY_CD");

                    b.Property<string>("AssessmentTypeCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("ASSESSMENT_TYPE_CD");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("CREATE_USER_ID");

                    b.Property<string>("OwnerUserLongId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("OWNER_USER_LONG_ID");

                    b.Property<string>("PartyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("PARTY_NAME");

                    b.Property<string>("PartyNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PARTY_NUMBER");

                    b.Property<string>("ProposedRiskClass")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("PROPOSED_RISK_CLASS");

                    b.Property<byte>("RiskAssessmentDuration")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("RISK_ASSESSMENT_DURATION");

                    b.Property<long>("RiskAssessmentId")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("RISK_ASSESSMENT_ID");

                    b.Property<string>("RiskClass")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RISK_CLASS");

                    b.Property<string>("RiskStatus")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RISK_STATUS");

                    b.Property<int>("VersionNumber")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("VERSION_NUMBER");

                    b.ToView("ART_RISK_ASSESSMENT_VIEW");
                });

            modelBuilder.Entity("Data.Data.ArtRolesAuditView", b =>
                {
                    b.Property<string>("Action")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("action");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("description");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("GroupNames")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("group_names");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("MemberUsers")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("member_users");

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("role_name");

                    b.ToView("ART_ROLES_AUDIT_VIEW", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ArtStAlertPerOwner", b =>
                {
                    b.Property<decimal?>("ALERTS_CNT_SUM")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("OWNER_USERID")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStAlertsPerStatus", b =>
                {
                    b.Property<decimal?>("ALERTS_COUNT")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("ALERT_STATUS")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStAmlPropRiskClass", b =>
                {
                    b.Property<decimal?>("NUMBER_OF_CUSTOMERS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("PROPOSED_RISK_CLASS")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStAmlRiskClass", b =>
                {
                    b.Property<decimal?>("NUMBER_OF_CUSTOMERS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("RISK_CLASSIFICATION")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStCasesPerCategory", b =>
                {
                    b.Property<string>("CASE_CATEGORY")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStCasesPerPriority", b =>
                {
                    b.Property<string>("CASE_PRIORITY")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStCasesPerStatus", b =>
                {
                    b.Property<string>("CASE_STATUS")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStCasesPerSubcat", b =>
                {
                    b.Property<string>("CASE_SUBCATEGORY")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStCustPerBranch", b =>
                {
                    b.Property<string>("BRANCH_NAME")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CUSTOMERS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStCustPerRisk", b =>
                {
                    b.Property<decimal?>("NUMBER_OF_CUSTOMERS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("RISK_CLASSIFICATION")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStCustPerType", b =>
                {
                    b.Property<string>("CUSTOMER_TYPE")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CUSTOMERS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStGoAmlReportsPerCreator", b =>
                {
                    b.Property<string>("CREATED_BY")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_REPORTS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStGoAmlReportsPerIndicator", b =>
                {
                    b.Property<string>("INDICATOR")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("NUMBER_OF_REPORTS")
                        .HasColumnType("NUMBER(10)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStGoAmlReportsPerStatus", b =>
                {
                    b.Property<decimal?>("NUMBER_OF_REPORTS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("REPORT_STATUS")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtStGoAmlReportsPerType", b =>
                {
                    b.Property<decimal?>("NUMBER_OF_REPORTS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("REPORT_TYPE")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtSystemPerformance", b =>
                {
                    b.Property<string>("CaseDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_DESC");

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(64)")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CaseStatus")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("CASE_STATUS");

                    b.Property<string>("CaseType")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("CASE_TYPE");

                    b.Property<string>("ClientName")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("CLIENT_NAME");

                    b.Property<DateTime>("CreateDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<decimal?>("DurationsInDays")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DURATIONS_IN_DAYS");

                    b.Property<decimal?>("DurationsInHours")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DURATIONS_IN_HOURS");

                    b.Property<decimal?>("DurationsInMinutes")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DURATIONS_IN_MINUTES");

                    b.Property<decimal?>("DurationsInSeconds")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DURATIONS_IN_SECONDS");

                    b.Property<DateTime?>("EcmLastStatusDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("ECM_LAST_STATUS_DATE");

                    b.Property<string>("HitsCount")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("HITS_COUNT");

                    b.Property<string>("IdentityNum")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("IDENTITY_NUM");

                    b.Property<string>("InvestrUserId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("INVESTR_USER_ID");

                    b.Property<string>("LockedBy")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("LOCKED_BY");

                    b.Property<string>("Priority")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("PRIORITY");

                    b.Property<string>("SwiftMessage")
                        .HasColumnType("CLOB")
                        .HasColumnName("SWIFT_MESSAGE");

                    b.Property<string>("SwiftReference")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("SWIFT_REFERENCE");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("FLOAT")
                        .HasColumnName("TRANSACTION_AMOUNT");

                    b.Property<string>("TransactionCurrency")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TRANSACTION_CURRENCY");

                    b.Property<string>("TransactionDirection")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TRANSACTION_DIRECTION");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TRANSACTION_TYPE");

                    b.Property<string>("UpdateUserId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("UPDATE_USER_ID");

                    b.ToView("ART_SYSTEM_PERFORMANCE");
                });

            modelBuilder.Entity("Data.Data.ArtSystemPerfPerDate", b =>
                {
                    b.Property<int?>("DAY")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("MONTH")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("NUMBER_OF_CASES")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("YEAR")
                        .HasColumnType("NUMBER(10)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtSystemPerfPerType", b =>
                {
                    b.Property<string>("CASE_TYPE")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("TOTAL_NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtSystemPreformance", b =>
                {
                    b.Property<string>("CaseDesc")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("CaseRk")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("CaseStatus")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("CaseType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClientName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreateUserId")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("DurationsInDays")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DurationsInHours")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DurationsInMinutes")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DurationsInSeconds")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("EcmLastStatusDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("HitsCount")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("IdentityNum")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("InvestrUserId")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LockedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Priority")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("SwiftReference")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double?>("TransactionAmount")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("TransactionCurrency")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TransactionDirection")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ValidFromDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.ToTable("ArtSystemPreformances", "ART");
                });

            modelBuilder.Entity("Data.Data.ArtSystemPrefPerDirection", b =>
                {
                    b.Property<decimal?>("TOTAL_NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("TRANSACTION_DIRECTION")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtSystemPrefPerStatus", b =>
                {
                    b.Property<string>("CASE_STATUS")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("TOTAL_NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtUserPerformance", b =>
                {
                    b.Property<string>("Action")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("ACTION");

                    b.Property<string>("ActionUser")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("ACTION_USER");

                    b.Property<DateTime?>("AsssignedTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ASSSIGNED_TIME");

                    b.Property<string>("CaseDesc")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CASE_DESC");

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("CASE_ID");

                    b.Property<decimal>("CaseRk")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("CASE_RK");

                    b.Property<string>("CaseStatus")
                        .HasMaxLength(4000)
                        .HasColumnType("NCLOB")
                        .HasColumnName("CASE_STATUS");

                    b.Property<string>("CaseTypeCd")
                        .HasMaxLength(32)
                        .HasColumnType("NVARCHAR2(32)")
                        .HasColumnName("CASE_TYPE_CD");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreateUserId")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("CREATE_USER_ID");

                    b.Property<int?>("DurationsInDays")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DURATIONS_IN_DAYS");

                    b.Property<int?>("DurationsInHours")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DURATIONS_IN_HOURS");

                    b.Property<int?>("DurationsInMinutes")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DURATIONS_IN_MINUTES");

                    b.Property<int?>("DurationsInSeconds")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DURATIONS_IN_SECONDS");

                    b.Property<string>("LockedBy")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("LOCKED_BY");

                    b.Property<string>("Priority")
                        .HasMaxLength(4000)
                        .HasColumnType("NCLOB")
                        .HasColumnName("PRIORITY");

                    b.Property<DateTime?>("ReleasedDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("RELEASED_DATE");

                    b.Property<string>("UpdateUserId")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("UPDATE_USER_ID");

                    b.Property<DateTime?>("ValidFromDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("VALID_FROM_DATE");

                    b.ToView("ART_USER_PERFORMANCE", "ART");
                });

            modelBuilder.Entity("Data.Data.ArtUserPerformancePerActionUser", b =>
                {
                    b.Property<string>("ACTION_USER")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("AVG_DURATIONS_IN_DAYS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_HOURS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_MINUTES")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_SECONDS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_DAYS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_HOURS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_MINUTES")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_SECONDS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("TOTAL_NUMBER_OF_CASES")
                        .HasColumnType("NUMBER(10)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtUserPerformPerAction", b =>
                {
                    b.Property<int?>("AVG_durations_in_days")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_durations_in_hours")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_durations_in_minutes")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_durations_in_seconds")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("Total_Number_Of_Cases")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("action")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("durations_in_days")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("durations_in_hours")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("durations_in_minutes")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("durations_in_seconds")
                        .HasColumnType("NUMBER(10)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtUserPerformPerUserAndAction", b =>
                {
                    b.Property<string>("ACTION")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ACTION_USER")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("AVG_DURATIONS_IN_DAYS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_HOURS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_MINUTES")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AVG_DURATIONS_IN_SECONDS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_DAYS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_HOURS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_MINUTES")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DURATIONS_IN_SECONDS")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("TOTAL_NUMBER_OF_CASES")
                        .HasColumnType("NUMBER(10)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.ArtUsersAuditView", b =>
                {
                    b.Property<string>("Action")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("action");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("address");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("description");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("DomainAccounts")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("domain_accounts");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("email");

                    b.Property<bool?>("Enable")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("enable");

                    b.Property<string>("GroupNames")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("group_names");

                    b.Property<DateTime?>("LastFailedLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("last_failed_login");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_login_date");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("phone");

                    b.Property<string>("RoleNames")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("role_names");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("status");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("user_name");

                    b.ToView("ART_USERS_AUDIT_VIEW", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.LastLoginPerDayView", b =>
                {
                    b.Property<string>("AppName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("APP_NAME");

                    b.Property<string>("DeviceName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("DEVICE_NAME");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("DEVICE_TYPE");

                    b.Property<string>("Ip")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("IP");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("LOCATION");

                    b.Property<DateTime?>("Logindatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("LOGINDATETIME");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("USER_NAME");

                    b.ToView("LAST_LOGIN_PER_DAY_VIEW", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ListGroupsRolesSummary", b =>
                {
                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("GROUP_NAME");

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ROLE_NAME");

                    b.ToView("LIST_GROUPS_ROLES_SUMMARY", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ListGroupsSubGroupsSummary", b =>
                {
                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("GROUP_NAME");

                    b.Property<string>("SubGroupName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("SUB_GROUP_NAME");

                    b.ToView("LIST_GROUPS_SUB_GROUPS_SUMMARY", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ListOfDeletedUser", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("address");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("description");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("LastFailedLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("last_failed_login");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_login_date");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("phone");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("USER_NAME");

                    b.Property<string>("UserType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("user_type");

                    b.ToView("LIST_OF_DELTED_USERS", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ListOfGroup", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("description");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("group_name");

                    b.Property<string>("GroupType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("group_type");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated_date");

                    b.ToView("LIST_OF_GROUPS", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ListOfRole", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("description");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("role_name");

                    b.Property<string>("RoleType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("role_type");

                    b.ToView("LIST_OF_ROLES", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ListOfUser", b =>
                {
                    b.Property<bool?>("Active")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("address");

                    b.Property<int?>("CounterLock")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("counter_lock");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("description");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("email");

                    b.Property<bool?>("Enable")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("enable");

                    b.Property<DateTime?>("LastFailedLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("last_failed_login");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_login_date");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("phone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("user_name");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("user_type");

                    b.ToView("LIST_OF_USERS", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ListOfUsersAndGroupsRole", b =>
                {
                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("DISPLAY_NAME");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("MemberOfGroup")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("MEMBER_OF_GROUP");

                    b.Property<string>("RoleOfGroup")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ROLE_OF_GROUP");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("USER_NAME");

                    b.ToView("LIST_OF_USERS_AND_GROUPS_ROLES", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ListOfUsersGroup", b =>
                {
                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("DISPLAY_NAME");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("MemberOfGroup")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("MEMBER_OF_GROUP");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("USER_NAME");

                    b.ToView("LIST_OF_USERS_GROUPS", "ART_DB");
                });

            modelBuilder.Entity("Data.Data.ListOfUsersRole", b =>
                {
                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("DISPLAY_NAME");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("USER_NAME");

                    b.Property<string>("UserRole")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("USER_ROLE");

                    b.ToView("LIST_OF_USERS_ROLES", "ART_DB");
                });

            modelBuilder.Entity("Data.DGCMGMT.ArtHomeCasesDate", b =>
                {
                    b.Property<decimal?>("Day")
                        .HasColumnType("int")
                        .HasColumnName("DAY");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(36)")
                        .HasColumnName("MONTH");

                    b.Property<decimal?>("NumberOfCases")
                        .HasColumnType("int")
                        .HasColumnName("NUMBER_OF_CASES");

                    b.Property<decimal?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("YEAR");

                    b.ToView("ART_HOME_CASES_DATE");
                });

            modelBuilder.Entity("Data.DGCMGMT.ArtHomeCasesStatus", b =>
                {
                    b.Property<string>("CaseStatus")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(9)")
                        .HasColumnName("CASE_STATUS");

                    b.Property<decimal?>("NumberOfCases")
                        .HasColumnType("int")
                        .HasColumnName("NUMBER_OF_CASES");

                    b.Property<int>("YEAR")
                        .HasColumnType("NUMBER(10)");

                    b.ToView("ART_HOME_CASES_STATUS");
                });

            modelBuilder.Entity("Data.DGCMGMT.ArtHomeCasesType", b =>
                {
                    b.Property<string>("CaseType")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(400)")
                        .HasColumnName("CASE_TYPE");

                    b.Property<decimal?>("NumberOfCases")
                        .HasColumnType("int")
                        .HasColumnName("NUMBER_OF_CASES");

                    b.Property<int>("YEAR")
                        .HasColumnType("NUMBER(10)");

                    b.ToView("ART_HOME_CASES_TYPES");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeAlertsPerDate", b =>
                {
                    b.Property<int?>("Day")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DAY");

                    b.Property<string>("Month")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(36)")
                        .HasColumnName("MONTH");

                    b.Property<int?>("NumberOfAlerts")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMBER_OF_ALERTS");

                    b.Property<int?>("Year")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("YEAR");

                    b.ToView("ART_HOME_ALERTS_PER_DATE", "ART");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeAlertsPerStatus", b =>
                {
                    b.Property<string>("AlertStatus")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("ALERT_STATUS");

                    b.Property<int?>("AlertsCount")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ALERTS_COUNT");

                    b.ToView("ART_HOME_ALERTS_PER_STATUS", "ART");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeNumberOfAccount", b =>
                {
                    b.Property<int?>("NumberOfAccounts")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMBER_OF_ACCOUNTS");

                    b.ToView("ART_HOME_NUMBER_OF_ACCOUNTS", "ART");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeNumberOfCustomer", b =>
                {
                    b.Property<int?>("NumberOfCustomers")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMBER_OF_CUSTOMERS");

                    b.ToView("ART_HOME_NUMBER_OF_CUSTOMERS", "ART");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeNumberOfHighRiskCustomer", b =>
                {
                    b.Property<int?>("NumberOfHighRiskCustomers")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMBER_OF_HIGH_RISK_CUSTOMERS");

                    b.ToView("ART_NUMBER_OF_HIGH_RISK_CUSTS", "ART");
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeNumberOfPepCustomer", b =>
                {
                    b.Property<int?>("NumberOfPepCustomers")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMBER_OF_PEP_CUSTOMERS");

                    b.ToView("ART_NUMBER_OF_PEP_CUSTOMERS", "ART");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("AspNetRoles", "ART");

                    b.HasData(
                        new
                        {
                            Id = "e60411ee-1127-4f5e-8f03-367ef13017a6",
                            ConcurrencyStamp = "ed1f66a5-57c8-47f6-be64-b50538db1971",
                            Name = "Home",
                            NormalizedName = "HOME"
                        },
                        new
                        {
                            Id = "83393df2-1bfa-471d-9a8a-8bf7c4b3f112",
                            ConcurrencyStamp = "c43b29a0-4cd2-476a-ad7b-8892ce1d745a",
                            Name = "CutomReport",
                            NormalizedName = "CUTOMREPORT"
                        },
                        new
                        {
                            Id = "ae3a9d7a-5adf-4cd9-85c4-517e59d08513",
                            ConcurrencyStamp = "8f5a4034-049e-4be3-aca6-aed4fd7c09e4",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "ART");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "ART");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "ART");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "ART");

                    b.HasData(
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            RoleId = "ae3a9d7a-5adf-4cd9-85c4-517e59d08513"
                        },
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            RoleId = "83393df2-1bfa-471d-9a8a-8bf7c4b3f112"
                        },
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            RoleId = "e60411ee-1127-4f5e-8f03-367ef13017a6"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "ART");
                });

            modelBuilder.Entity("ART_PACKAGE.Areas.Identity.Data.ArtSavedCustomReport", b =>
                {
                    b.HasOne("ART_PACKAGE.Areas.Identity.Data.AppUser", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ART_PACKAGE.Areas.Identity.Data.ArtSavedReportsChart", b =>
                {
                    b.HasOne("ART_PACKAGE.Areas.Identity.Data.ArtSavedCustomReport", "Report")
                        .WithMany("Charts")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ART_PACKAGE.Areas.Identity.Data.ArtSavedReportsColumns", b =>
                {
                    b.HasOne("ART_PACKAGE.Areas.Identity.Data.ArtSavedCustomReport", "Report")
                        .WithMany("Columns")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ART_PACKAGE.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ART_PACKAGE.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ART_PACKAGE.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ART_PACKAGE.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ART_PACKAGE.Areas.Identity.Data.AppUser", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("ART_PACKAGE.Areas.Identity.Data.ArtSavedCustomReport", b =>
                {
                    b.Navigation("Charts");

                    b.Navigation("Columns");
                });
#pragma warning restore 612, 618
        }
    }
}
