// <auto-generated />
using System;
using Data.Data.ExportSchedular;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace OracleMigrations.Migrations.ExportSchedular
{
    [DbContext(typeof(ExportSchedularContext))]
    partial class ExportSchedularContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Data.ExportSchedular.ExportTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Day")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Hour")
                        .HasColumnType("NUMBER(10)");

                    b.Property<bool>("IsMailed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsSavedOnServer")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("MailContent")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Minute")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("Month")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ParametersJson")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Path")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasDefaultValue("Never");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ExportsTasks");
                });

            modelBuilder.Entity("Data.Data.ExportSchedular.TaskMails", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Mail")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("TaskId", "Mail");

                    b.ToTable("TaskMails");
                });

            modelBuilder.Entity("Data.Data.ExportSchedular.TaskMails", b =>
                {
                    b.HasOne("Data.Data.ExportSchedular.ExportTask", "Task")
                        .WithMany("Mails")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Data.Data.ExportSchedular.ExportTask", b =>
                {
                    b.Navigation("Mails");
                });
#pragma warning restore 612, 618
        }
    }
}
