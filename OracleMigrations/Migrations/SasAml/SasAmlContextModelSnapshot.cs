// <auto-generated />
using System;
using Data.Data.SASAml;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace OracleMigrations.Migrations.SasAml
{
    [DbContext(typeof(SasAmlContext))]
    partial class SasAmlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Data.SASAml.ArtAmlAlertDetailView", b =>
                {
                    b.Property<string>("ActualValuesText")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ACTUAL_VALUES_TEXT");

                    b.Property<string>("AlertDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ALERT_DESCRIPTION");

                    b.Property<long?>("AlertId")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ALERT_ID");

                    b.Property<string>("AlertStatus")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ALERT_STATUS");

                    b.Property<string>("AlertSubCat")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ALERT_SUB_CAT");

                    b.Property<string>("AlertTypeCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("ALERT_TYPE_CD");

                    b.Property<string>("AlertedEntityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("ALERTED_ENTITY_NAME");

                    b.Property<string>("AlertedEntityNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ALERTED_ENTITY_NUMBER");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLOSE_DATE");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("EmployeeInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("EMPLOYEE_IND")
                        .IsFixedLength();

                    b.Property<int?>("InvestigationDays")
                        .HasColumnType("NUMBER")
                        .HasColumnName("INVESTIGATION_DAYS");

                    b.Property<int?>("MoneyLaunderingRiskScore")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("MONEY_LAUNDERING_RISK_SCORE");

                    b.Property<string>("OwnerUserid")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("OWNER_USERID");

                    b.Property<string>("PartyTypeDesc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("PARTY_TYPE_DESC");

                    b.Property<string>("PoliticallyExposedPersonInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("POLITICALLY_EXPOSED_PERSON_IND");

                    b.Property<string>("ReportCloseRsn")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("REPORT_CLOSE_RSN");

                    b.Property<DateTime?>("RunDate")
                        .HasColumnType("DATE")
                        .HasColumnName("RUN_DATE");

                    b.Property<long?>("ScenarioId")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("SCENARIO_ID");

                    b.Property<string>("ScenarioName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("SCENARIO_NAME");

                    b.ToView("ART_AML_ALERT_DETAIL_VIEW");
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtAmlCaseDetailsView", b =>
                {
                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("CaseCategory")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_CATEGORY");

                    b.Property<long?>("CaseId")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CASE_ID");

                    b.Property<string>("CasePriority")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_PRIORITY");

                    b.Property<string>("CaseStatus")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_STATUS");

                    b.Property<string>("CaseSubCategory")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CASE_SUB_CATEGORY");

                    b.Property<DateTime?>("ClosedDate")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("CLOSED_DATE");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("CREATED_BY");

                    b.Property<string>("EntityLevel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ENTITY_LEVEL");

                    b.Property<string>("EntityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("ENTITY_NAME");

                    b.Property<string>("EntityNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ENTITY_NUMBER");

                    b.Property<string>("Owner")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("OWNER");

                    b.ToView("ART_AML_CASE_DETAILS_VIEW");
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtAmlCustomersDetailsView", b =>
                {
                    b.Property<string>("ActiveFlg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ACTIVE_FLG")
                        .IsFixedLength();

                    b.Property<int?>("AnnualIncomeAmount")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ANNUAL_INCOME_AMOUNT");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("CitizenshipCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CITIZENSHIP_COUNTRY_NAME");

                    b.Property<string>("CityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("CITY_NAME");

                    b.Property<DateTime?>("CustomerDateOfBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("CUSTOMER_DATE_OF_BIRTH");

                    b.Property<string>("CustomerIdentificationId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("CUSTOMER_IDENTIFICATION_ID");

                    b.Property<string>("CustomerIdentificationType")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("CUSTOMER_IDENTIFICATION_TYPE")
                        .IsFixedLength();

                    b.Property<string>("CustomerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("CUSTOMER_NAME");

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CUSTOMER_NUMBER");

                    b.Property<DateTime?>("CustomerSinceDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CUSTOMER_SINCE_DATE");

                    b.Property<string>("CustomerStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CUSTOMER_STATUS");

                    b.Property<string>("CustomerTaxId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("CUSTOMER_TAX_ID");

                    b.Property<string>("CustomerType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CUSTOMER_TYPE");

                    b.Property<string>("DoingBusinessAsName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("DOING_BUSINESS_AS_NAME");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("EMAIL_ADDRESS");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("EMPLOYEE_NUMBER");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("EMPLOYER_NAME");

                    b.Property<string>("EmployerPhoneNumber")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("EMPLOYER_PHONE_NUMBER");

                    b.Property<string>("GovernorateName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("GOVERNORATE_NAME");

                    b.Property<string>("IndustryDesc")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("INDUSTRY_DESC");

                    b.Property<string>("IsEmployee")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("IS_EMPLOYEE")
                        .IsFixedLength();

                    b.Property<DateTime?>("LastRiskAssessmentDate")
                        .HasColumnType("DATE")
                        .HasColumnName("LAST_RISK_ASSESSMENT_DATE");

                    b.Property<string>("MailingAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("MAILING_ADDRESS_1");

                    b.Property<string>("MailingCityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("MAILING_CITY_NAME");

                    b.Property<string>("MailingCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("MAILING_COUNTRY_NAME");

                    b.Property<string>("MailingPostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(10)")
                        .HasColumnName("MAILING_POSTAL_CODE")
                        .IsFixedLength();

                    b.Property<string>("MaritalStatusDesc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MARITAL_STATUS_DESC");

                    b.Property<int?>("NetWorthAmount")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NET_WORTH_AMOUNT");

                    b.Property<string>("NonProfitOrgInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("NON_PROFIT_ORG_IND")
                        .IsFixedLength();

                    b.Property<string>("OccupationDesc")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("OCCUPATION_DESC");

                    b.Property<string>("PhoneNumber1")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("PHONE_NUMBER_1");

                    b.Property<string>("PhoneNumber2")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("PHONE_NUMBER_2");

                    b.Property<string>("PhoneNumber3")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("PHONE_NUMBER_3");

                    b.Property<string>("PoliticallyExposedPersonInd")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("POLITICALLY_EXPOSED_PERSON_IND")
                        .IsFixedLength();

                    b.Property<string>("ResidenceCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RESIDENCE_COUNTRY_NAME");

                    b.Property<string>("RiskClassification")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RISK_CLASSIFICATION");

                    b.Property<string>("StreetAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("STREET_ADDRESS_1");

                    b.Property<string>("StreetCountryCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(3)")
                        .HasColumnName("STREET_COUNTRY_CODE")
                        .IsFixedLength();

                    b.Property<string>("StreetCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("STREET_COUNTRY_NAME");

                    b.Property<string>("StreetPostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(10)")
                        .HasColumnName("STREET_POSTAL_CODE")
                        .IsFixedLength();

                    b.ToView("ART_AML_CUSTOMERS_DETAILS_VIEW");
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtAmlHighRiskCustView", b =>
                {
                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("CitizenshipCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CITIZENSHIP_COUNTRY_NAME");

                    b.Property<string>("MailingAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("MAILING_ADDRESS_1");

                    b.Property<string>("MailingCityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("MAILING_CITY_NAME");

                    b.Property<DateTime?>("PartyDateOfBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("PARTY_DATE_OF_BIRTH");

                    b.Property<string>("PartyIdentificationId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("PARTY_IDENTIFICATION_ID");

                    b.Property<string>("PartyIdentificationTypeDesc")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(4)")
                        .HasColumnName("PARTY_IDENTIFICATION_TYPE_DESC")
                        .IsFixedLength();

                    b.Property<string>("PartyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("PARTY_NAME");

                    b.Property<string>("PartyNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PARTY_NUMBER");

                    b.Property<string>("PartyTaxId")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("PARTY_TAX_ID");

                    b.Property<string>("PartyTypeDesc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("PARTY_TYPE_DESC");

                    b.Property<string>("PhoneNumber1")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("PHONE_NUMBER_1");

                    b.Property<string>("PoliticallyExposedPersonInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("POLITICALLY_EXPOSED_PERSON_IND");

                    b.Property<string>("ResidenceCountryName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RESIDENCE_COUNTRY_NAME");

                    b.Property<string>("RiskClassification")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RISK_CLASSIFICATION");

                    b.Property<string>("StreetAddress1")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("STREET_ADDRESS_1");

                    b.Property<string>("StreetCityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("STREET_CITY_NAME");

                    b.ToView("ART_AML_HIGH_RISK_CUST_VIEW");
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtAmlTriageView", b =>
                {
                    b.Property<int?>("AgeOldestAlert")
                        .HasPrecision(4)
                        .HasColumnType("NUMBER(4)")
                        .HasColumnName("AGE_OLDEST_ALERT");

                    b.Property<decimal?>("AggregateAmt")
                        .HasColumnType("NUMBER(15,3)")
                        .HasColumnName("AGGREGATE_AMT");

                    b.Property<string>("AlertedEntityLevel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ALERTED_ENTITY_LEVEL");

                    b.Property<string>("AlertedEntityName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("ALERTED_ENTITY_NAME");

                    b.Property<string>("AlertedEntityNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ALERTED_ENTITY_NUMBER");

                    b.Property<int?>("AlertsCnt")
                        .HasPrecision(4)
                        .HasColumnType("NUMBER(4)")
                        .HasColumnName("ALERTS_CNT");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<string>("OwnerUserid")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("OWNER_USERID");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RISK_SCORE");

                    b.ToView("ART_AML_TRIAGE_VIEW");
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtHomeAlertsPerStatus", b =>
                {
                    b.Property<string>("AlertStatus")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("ALERT_STATUS");

                    b.Property<int?>("AlertsCount")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ALERTS_COUNT");

                    b.ToView("ART_HOME_ALERTS_PER_STATUS", "ART");
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtHomeNumberOfAccount", b =>
                {
                    b.Property<int?>("NumberOfAccounts")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMBER_OF_ACCOUNTS");

                    b.ToView("ART_HOME_NUMBER_OF_ACCOUNTS", "ART");
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtHomeNumberOfCustomer", b =>
                {
                    b.Property<int?>("NumberOfCustomers")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMBER_OF_CUSTOMERS");

                    b.ToView("ART_HOME_NUMBER_OF_CUSTOMERS", "ART");
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtHomeNumberOfHighRiskCustomer", b =>
                {
                    b.Property<int?>("NumberOfHighRiskCustomers")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMBER_OF_HIGH_RISK_CUSTOMERS");

                    b.ToView("ART_NUMBER_OF_HIGH_RISK_CUSTS", "ART");
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtHomeNumberOfPepCustomer", b =>
                {
                    b.Property<int?>("NumberOfPepCustomers")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMBER_OF_PEP_CUSTOMERS");

                    b.ToView("ART_NUMBER_OF_PEP_CUSTOMERS", "ART");
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtRiskAssessmentView", b =>
                {
                    b.Property<string>("AssessmentCategoryCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("ASSESSMENT_CATEGORY_CD");

                    b.Property<string>("AssessmentSubcategoryCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("ASSESSMENT_SUBCATEGORY_CD");

                    b.Property<string>("AssessmentTypeCd")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("ASSESSMENT_TYPE_CD");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BranchNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BRANCH_NUMBER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("CREATE_USER_ID");

                    b.Property<string>("OwnerUserLongId")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(60)")
                        .HasColumnName("OWNER_USER_LONG_ID");

                    b.Property<string>("PartyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("PARTY_NAME");

                    b.Property<string>("PartyNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PARTY_NUMBER");

                    b.Property<string>("ProposedRiskClass")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("PROPOSED_RISK_CLASS");

                    b.Property<byte>("RiskAssessmentDuration")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("RISK_ASSESSMENT_DURATION");

                    b.Property<long>("RiskAssessmentId")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("RISK_ASSESSMENT_ID");

                    b.Property<string>("RiskClass")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RISK_CLASS");

                    b.Property<string>("RiskStatus")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RISK_STATUS");

                    b.Property<int>("VersionNumber")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("VERSION_NUMBER");

                    b.ToView("ART_RISK_ASSESSMENT_VIEW");
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtStAlertPerOwner", b =>
                {
                    b.Property<decimal?>("ALERTS_CNT_SUM")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("OWNER_USERID")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtStAlertsPerStatus", b =>
                {
                    b.Property<decimal?>("ALERTS_COUNT")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("ALERT_STATUS")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtStAmlPropRiskClass", b =>
                {
                    b.Property<decimal?>("NUMBER_OF_CUSTOMERS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("PROPOSED_RISK_CLASS")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtStAmlRiskClass", b =>
                {
                    b.Property<decimal?>("NUMBER_OF_CUSTOMERS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("RISK_CLASSIFICATION")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtStCasesPerCategory", b =>
                {
                    b.Property<string>("CASE_CATEGORY")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtStCasesPerPriority", b =>
                {
                    b.Property<string>("CASE_PRIORITY")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtStCasesPerStatus", b =>
                {
                    b.Property<string>("CASE_STATUS")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtStCasesPerSubcat", b =>
                {
                    b.Property<string>("CASE_SUBCATEGORY")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CASES")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtStCustPerBranch", b =>
                {
                    b.Property<string>("BRANCH_NAME")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CUSTOMERS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtStCustPerRisk", b =>
                {
                    b.Property<decimal?>("NUMBER_OF_CUSTOMERS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("RISK_CLASSIFICATION")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.Data.SASAml.ArtStCustPerType", b =>
                {
                    b.Property<string>("CUSTOMER_TYPE")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("NUMBER_OF_CUSTOMERS")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Data.FCF71.ArtHomeAlertsPerDate", b =>
                {
                    b.Property<int?>("Day")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DAY");

                    b.Property<string>("Month")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(36)")
                        .HasColumnName("MONTH");

                    b.Property<int?>("NumberOfAlerts")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMBER_OF_ALERTS");

                    b.Property<int?>("Year")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("YEAR");

                    b.ToView("ART_HOME_ALERTS_PER_DATE", "ART");
                });
#pragma warning restore 612, 618
        }
    }
}
