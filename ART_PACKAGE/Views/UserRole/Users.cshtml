
@{
    ViewData["Title"] = "Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/lib/Plugins/Kendo/kendo.default-v2.min.css" rel="stylesheet" />
<script src="~/lib/Plugins/Kendo/jquery.min.js"></script>
<script src="~/lib/Plugins/Kendo/jszip.js"></script>
<script src="~/lib/Plugins/Kendo/jszip.min.js"></script>
<script src="~/lib/Plugins/Kendo/kendo.all.min.js"></script>

<section class="content-header">
    <h1>
        Users Mangment
    </h1>
</section>
<div class="centering">
    <button type="button" id="ModelBTN" class="btn btn-primary" style="display:none" data-toggle="modal" data-target="#exampleModal">
        Edit User
    </button>
    <a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Register">ِAdd User</a>
</div>
<div id="example">
    <div id="grid"></div>
    <script>

        var currentSelected = [];
        var userData = [];
        function onChange(e) {
            var userNamez = [];
            var rows = e.sender.select();

            // to get count of rows in the current view after filtering
            var grid = $("#grid").data("kendoGrid");

            //to get the selected alerted  entity numbers of selected rows
            rows.each(function (e) {
                var grid = $("#grid").data("kendoGrid");
                var dataItem = grid.dataItem(this);
                var UserName = dataItem.UserName;
                userNamez.push(UserName);
            })
            currentSelected = userNamez;
            getUserByID(currentSelected);
        };




        function getUserByID(currentSelected) {
            if (currentSelected) {
                var ModelBTN = document.getElementById("ModelBTN");
                var ModelBody = document.getElementById("ModelBodyHTML");
                ModelBTN.style.display = "block";
                $.ajax('/UserRole/GetUserByUserName',
                    {
                        dataType: 'json', // type of response data
                        data: {
                            "username": currentSelected[0],
                        },
                        timeout: 500,  // timeout milliseconds
                        success: function (data, status, xhr) {
                            console.log(data);
                            userData = data;
                            var Active = userData['Active'];
                            var UserName = userData['UserName'];
                            $("#AfterEdit").val(UserName);
                            $("#BeforeEdit").val(UserName);
                            var $switch = $('#activeswitch');
                            var content_of_switch = document.getElementById('active_inactive');
                            var text_to_change = content_of_switch.childNodes[0];
                            if (Active) {
                                $switch.prop("checked", true);
                                $switch.val("1");
                                text_to_change.nodeValue = "Active";
                            }
                            if (!Active) {
                                $switch.removeAttr('checked');
                                $switch.val("0");
                                text_to_change.nodeValue = "Inactive";
                            }


                        },
                        error: function (jqXhr, textStatus, errorMessage) { // error callback
                            $('p').append('Error: ' + errorMessage);
                        }
                    });

            }
        };



        $(document).ready(function () {
            $("#grid").kendoGrid({
                dataSource: {
                    type: "api",
                    transport: {
                        read: "/UserRole/GetUsersData"
                    },
                    schema: {
                        model: {
                            fields: {
                                UserName: { type: "string" },
                                Active: { type: "boolean" }

                            }
                        }
                    },
                    pageSize: 100,
                    serverPaging: false,
                    serverFiltering: false,
                    serverSorting: false
                },
                height: 300,
                filterable: true,
                sortable: true,
                reorderable: true,
                pageable: true,
                resizable: true,
                change: onChange,
                selectable: "single",

                columns: [
                    { field: "UserName", stickable: true },
                    { field: "Active", template: `<input type="checkbox" #= Active ? checked="checked" : "" #   onClick='return false;' ></input>`, stickable: true }


                ]

            });
        });




    </script>

</div>


<!-- Modal -->
<form>
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document" style="width:60%">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">User Informations</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body" id="ModelBodyHTML">
                    <div class="row">

                        <div id="customerDetails" class="col-12 panel panel-primary customer-details medium-capped-width">
                            <div class="panel-body">
                                <div id="clusterSummary" class="text-primary aml-panel-title text-bold">
                                    Edit User
                                </div>
                                <div class="labelValueRows">
                                    <div class="labelValueRow">
                                        <div class="text-label text-bold">User Name:</div>


                                        <input type="hidden" id="BeforeEdit" name="BeforeEdit" value="" />
                                        <input type="text" id="AfterEdit" class="form-control" name="AfterEdit" value="" />
                                        <label id="active_inactive" for="switchh" class="col-auto" style=" display: table-cell; vertical-align: middle; margin: auto;">
                                            Active
                                        </label>
                                        <label id="switchh" class="switch col-auto" style=" display: inline-block; vertical-align: middle;">
                                            <input name="active" id="activeswitch" value="" type="checkbox" checked>
                                            <span class="slider round"></span>
                                        </label>
                                    </div>
                                </div>

                            </div>
                        </div>


                    </div>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" asp-action="EditUser">Save</button>
                </div>
            </div>
        </div>
    </div>
</form>



<style>
    html, body {
        overflow: auto;
    }

    .centering {
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 30px;
        height: 20px;
    }

        /* Hide default HTML checkbox */
        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    /* The slider */
    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 76.47058824%;
            width: 43.333333333%;
            left: 6.666666667%;
            bottom: 11.76470588%;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(100%);
        -ms-transform: translateX(100%);
        transform: translateX(100%);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }
</style>

<script>
    let content_of_switch = document.getElementById('active_inactive');
    var text_to_change = content_of_switch.childNodes[0];
    document.getElementById('activeswitch').addEventListener('change', function () {
        let valuee = this.getAttribute("value");
        if (valuee == '1') {
            this.setAttribute("value", "0");
            text_to_change.nodeValue = "inactive";
        }
        if (valuee == '0') {
            this.setAttribute("value", "1")
            text_to_change.nodeValue = "active";
        }
    });


</script>

