@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/lib/Plugins/Kendo/kendo.default-v2.min.css" rel="stylesheet" />
<script src="~/lib/Plugins/Kendo/jquery-1.12.4.min.js"></script>
<script src="~/lib/Plugins/Kendo/jquery.min.js"></script>
<script src="~/lib/Plugins/Kendo/jszip.js"></script>
<script src="~/lib/Plugins/Kendo/jszip.min.js"></script>
<script src="~/lib/Plugins/Kendo/kendo.all.min.js"></script>
<script src="~/lib/jquery-loading-overlay/loadingoverlay.js"></script>
<script src="~/js/FileExtraction.js"></script>
<script src="~/js/site.js"></script>
<link href="~/css/site.css" rel="stylesheet" />


<section class="content-header">
    <h1>
        High Risk Customers Details
        <small>Presents the High Risk Customers Details </small>
        <br />
    </h1>
</section>


<div id="grid"></div>
@section Scripts{


    <script src="~/js/Dynamic.js" id="script" defer type="module" data-urlkey="HighRisk"></script>
}


<!--@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br>
<link href="~/lib/Plugins/Kendo/kendo.default-v2.min.css" rel="stylesheet" />-->
@*<script src="~/lib/Plugins/Kendo/jquery-1.12.4.min.js"></script>*@
<!--<script src="~/lib/Plugins/Kendo/jquery.min.js"></script>
<script src="~/lib/Plugins/Kendo/jszip.js"></script>
<script src="~/lib/Plugins/Kendo/jszip.min.js"></script>
<script src="~/lib/Plugins/Kendo/kendo.all.min.js"></script>

<section class="content-header">
    <h1>
        High Risk Customers Details
        <small>Presents the High Risk Customers Details </small>
    </h1>
</section>-->
<!-- Main content -->
<!--<section class="content container-fluid">
    <button type="button" id="ModelBTN" class="btn btn-primary text-center" style="display:block" data-toggle="modal" data-target="#exampleModal" onclick="getDate()">
        Filters .. <span class="glyphicon glyphicon-search">  </span>
    </button>-->
<!-- GRID -->
<!--<div id="example">
        <div id="grid"></div>
        <div class="content text-center">
            <button class="btn btn-primary" id="bck"><span class="glyphicon glyphicon-arrow-left"></span></button>
            <label id="pageNumber"></label>
            <button class="btn btn-primary" id="nxt"><span class="glyphicon glyphicon-arrow-right"></span></button>
            <label style="float:right" id="totalCount"></label>
        </div>
        <script>
            $("#nxt").removeAttr("style").hide();
            $("#bck").removeAttr("style").hide();
            function CleartModelFilters() {
                $('#PartyNumber').val("");
                $('#PartyTypeDesc').val("");
                $('#PartyTaxId').val("");
                $('#PartyIdentificationId').val("");
                $('#PartyIdentificationTypeDesc').val("");
                $('#PartyName').val("");
                $('#StreetAddress1').val("");
                $('#MailingAddress1').val("");
                $('#MailingCityName').val("");
                $('#ResidenceCountryName').val("");
                $('#CitizenshipCountryName').val("");
                $('#PhoneNumber1').val("");
                $('#PoliticallyExposedPersonInd').val("");
                $('#RiskClassification').val("");
                $('#BranchName').val("");
                $('#BranchNumber').val("");
                $('#birtstartdate').val("");
                $('#birthenddate').val("");
            };
            var filtiredData;
            var pageNum = 1;
            var PageLimits = 0;
            $('#bck').prop('disabled', true);

            function PresentData() {
                var PartyNumber = $('#PartyNumber').val();
                var PartyTypeDesc = $('#PartyTypeDesc').val();
                var PartyTaxId = $('#PartyTaxId').val();
                var PartyIdentificationId = $('#PartyIdentificationId').val();
                var PartyIdentificationTypeDesc = $('#PartyIdentificationTypeDesc').val();
                var PartyName = $('#PartyName').val();
                var StreetAddress1 = $('#StreetAddress1').val();
                var MailingAddress1 = $('#MailingAddress1').val();
                var MailingCityName = $('#MailingCityName').val();
                var ResidenceCountryName = $('#ResidenceCountryName').val();
                var CitizenshipCountryName = $('#CitizenshipCountryName').val();
                var PhoneNumber1 = $('#PhoneNumber1').val();
                var PoliticallyExposedPersonInd = $('#PoliticallyExposedPersonInd').val();
                var RiskClassification = $('#RiskClassification').val();
                var BranchName = $('#BranchName').val();
                var BranchNumber = $('#BranchNumber').val();
                var birtstartdate = $('#birtstartdate').val();
                var birthenddate = $('#birthenddate').val();

                var pageNum = 1;
                $('#grid').empty(); // to prevent more than one render

                $("#nxt").show();
                $("#bck").show();
                if (pageNum == 1) {
                    $('#bck').prop('disabled', true);
                }

                $('#grid').empty(); // to prevent more than one render
                $(document).ready(function () {
                    $.getJSON("/HighRisk/getTotalCount", function (data) {
                        $('#totalCount').text("Total Count : ( " + data + " ) Rows");
                        PageLimits = Math.ceil(data / 600);
                    });
                });
                //var PageLimits = 0;
                //var pageNum = 1;
                $('#pageNumber').empty();
                $("#pageNumber").text(pageNum);
                //$('#bck').prop('disabled', true);

                callKendo();
                $('#nxt').click(function () {

                    if (pageNum == 1) {

                        $('#grid').empty();
                        $('#pageNumber').empty();
                        $("#pageNumber").text(pageNum);
                        $('#bck').prop('disabled', true);

                        callKendo();

                    }
                    if (pageNum < PageLimits) {
                        $('#bck').prop('disabled', false);

                        $('#grid').empty();
                        //console.log("PageLimits_2 : " + PageLimits);
                        pageNum += 1;
                        if (PageLimits == pageNum) {
                            $('#nxt').prop('disabled', true);
                        }
                        $('#pageNumber').empty();
                        $("#pageNumber").text(pageNum);
                        callKendo();
                    } else {
                        $('#nxt').prop('disabled', true);
                        $('#grid').empty();
                        callKendo();
                    }

                });
                $('#bck').click(function () {
                    $('#nxt').prop('disabled', false);
                    console.log(pageNum);
                    if (pageNum == 1) {
                        $('#bck').prop('disabled', true);
                        $('#grid').empty();
                        $('#pageNumber').empty();
                        $("#pageNumber").text(pageNum);
                        callKendo();

                    }
                    else {
                        console.log(pageNum);
                        $('#grid').empty();

                        pageNum -= 1;
                        if (pageNum == 1) {
                            $('#bck').prop('disabled', true);

                        }
                        $('#pageNumber').empty();
                        $("#pageNumber").text(pageNum);
                        callKendo();
                    }
                });
                //console.log("/HighRisk/GetData?page=" + pageNum + "&PartyNumber=" + PartyNumber + "&PartyTypeDesc=" + PartyTypeDesc + "&PartyTaxId=" + PartyTaxId + "&PartyIdentificationId=" + PartyIdentificationId + "&PartyIdentificationTypeDesc=" + PartyIdentificationTypeDesc + "&PartyName=" + PartyName + "&StreetAddress1=" + StreetAddress1  + "&MailingAddress1=" + MailingAddress1 + "&MailingCityName=" + MailingCityName + "&ResidenceCountryName=" + ResidenceCountryName + "&CitizenshipCountryName=" + CitizenshipCountryName + "&PhoneNumber1=" + PhoneNumber1 + "&PoliticallyExposedPersonInd=" + PoliticallyExposedPersonInd + "&RiskClassification=" + RiskClassification + "&BranchName=" + BranchName);

                function callKendo() {

                    $("#grid").kendoGrid({
                        dataSource: {
                            type: "api",
                            transport: {
                                read: "/HighRisk/GetData?page=" + pageNum + "&PartyNumber=" + PartyNumber + "&PartyTypeDesc=" + PartyTypeDesc + "&PartyTaxId=" + PartyTaxId + "&PartyIdentificationId=" + PartyIdentificationId + "&PartyIdentificationTypeDesc=" + PartyIdentificationTypeDesc + "&PartyName=" + PartyName + "&StreetAddress1=" + StreetAddress1 + "&MailingAddress1=" + MailingAddress1 + "&MailingCityName=" + MailingCityName + "&ResidenceCountryName=" + ResidenceCountryName + "&CitizenshipCountryName=" + CitizenshipCountryName + "&PhoneNumber1=" + PhoneNumber1 + "&PoliticallyExposedPersonInd=" + PoliticallyExposedPersonInd + "&RiskClassification=" + RiskClassification + "&BranchName=" + BranchName + "&BranchNumber=" + BranchNumber + "&birtstartdate=" + birtstartdate + "&birthenddate=" + birthenddate


                            },
                            schema: {
                                model: {
                                    fields: {
                                        PartyNumber: { type: "string" },
                                        PartyTypeDesc: { type: "string" },
                                        PartyTaxId: { type: "string" },
                                        PartyIdentificationId: { type: "string" },
                                        PartyIdentificationTypeDesc: { type: "string" },
                                        PartyDateOfBirth: { type: "date" },
                                        PartyName: { type: "string" },
                                        StreetAddress1: { type: "string" },
                                        StreetCityName: { type: "string" },
                                        MailingAddress1: { type: "string" },
                                        MailingCityName: { type: "string" },
                                        ResidenceCountryName: { type: "string" },
                                        CitizenshipCountryName: { type: "string" },
                                        PhoneNumber1: { type: "string" },
                                        PoliticallyExposedPersonInd: { type: "string" },
                                        RiskClassification: { type: "string" },
                                        BranchName: { type: "string" },
                                        BranchNumber: { type: "string" }
                                    }
                                }
                            },
                            pageSize: 17,
                            serverPaging: false,
                            serverFiltering: false,
                            serverSorting: false
                        },
                        height: 590,
                        // filterable: true,
                        pageable: {
                            numeric: false,
                            previousNext: false
                        },
                        sortable: { mode: "single", allowUnsort: true },
                        scrollable: { virtual: true },
                        reorderable: true,
                        // pageable: true,
                        resizable: true,
                        selectable: "single",
                        toolbar: ["excel"],
                        excel: {
                            fileName: "Data_Export.xlsx",
                            allPages: true,
                            filterable: true
                        },

                        columns: [
                            { field: "PartyName", width: 250, title: "Party Name", stickable: true },
                            { field: "PartyNumber", width: 200, title: "Party Number", stickable: true },
                            { field: "BranchName", width: 150, title: "Branch Name", stickable: true },
                            { field: "BranchNumber", width: 150, title: "Branch Number", stickable: true },
                            { field: "PartyDateOfBirth", width: 150, title: "Party Date Of Birth", format: "{0:MMM/dd/yyyy}", stickable: true },
                            { field: "PartyIdentificationId", width: 200, title: "Party Identification ID", stickable: true },
                            { field: "PhoneNumber1", width: 150, title: "Phone Number", stickable: true },
                            { field: "PartyTaxId", width: 200, title: "Party Tax ID", stickable: true },
                            { field: "MailingAddress1", width: 150, title: "Mailing Address", stickable: true },
                            { field: "StreetAddress1", width: 250, title: "Street Address", stickable: true },
                            { field: "StreetCityName", width: 150, title: "Street City Name", stickable: true },
                            { field: "ResidenceCountryName", width: 200, title: "Residence Country", stickable: true },
                            { field: "CitizenshipCountryName", width: 200, title: "Citizenship Country", stickable: true },
                            { field: "PartyIdentificationTypeDesc", width: 200, title: "Party Identification Type", stickable: true },
                            { field: "PoliticallyExposedPersonInd", width: 150, title: "PEP", stickable: true },
                            { field: "PartyTypeDesc", width: 150, title: "Party Type", stickable: true },
                            { field: "RiskClassification", width: 200, title: "Risk Classification", stickable: true },
                            { field: "MailingCityName", width: 150, title: "Mailing City Name", stickable: true }
                        ],
                        dataBound: dataBounding
                        , filterMenuInit: onFilterMenuInit
                    });
                }
                function dataBounding() {

                    console.log("dataBound");

                    setTimeout(function () {

                        var grid = $("#grid").data("kendoGrid");
                        var dataSource = grid.dataSource;

                        //records on current view / page
                        var recordsOnCurrentView = dataSource.view().length;
                        console.log("recordsOnCurrentView = " + recordsOnCurrentView);

                        //total records
                        var totalRecords = dataSource.total();
                        console.log("totalRecords = " + totalRecords);

                        if (totalRecords < 600) {
                            // $('#bck').prop('disabled', true);
                            $('#nxt').prop('disabled', true);
                        } else {
                            //$('#bck').prop('disabled', false);
                            $('#nxt').prop('disabled', false);
                        }

                    }, 1000);

                };
                //START check box filter for scenario names
                function onFilterMenuInit(e) {
                    //if (e.field == "BranchName") { initCheckboxFilter.call(this, e); };
                    if (e.field == "ResidenceCountryName") { initCheckboxFilter.call(this, e); };
                    if (e.field == "CitizenshipCountryName") { initCheckboxFilter.call(this, e); };
                    if (e.field == "PoliticallyExposedPersonInd") { initCheckboxFilter.call(this, e); };
                    if (e.field == "PartyTypeDesc") { initCheckboxFilter.call(this, e); };
                    if (e.field == "RiskClassification") { initCheckboxFilter.call(this, e); };
                }

                function initCheckboxFilter(e) {
                    var popup = e.container.data("kendoPopup");
                    var dataSource = this.dataSource;
                    var field = e.field;


                    var checkboxesDataSource = new kendo.data.DataSource({
                        data: uniqueForField(dataSource.data(), field)
                    });


                    var helpTextElement = e.container.children(":first").children(":first");
                    helpTextElement.nextUntil(":has(.k-button)").remove();
                    var element = $("<div class='checkbox-container'></div>").insertAfter(helpTextElement).kendoListView({
                        dataSource: checkboxesDataSource,
                        template: "<div><input type='checkbox' value='#:" + field + "#'/>#:" + field + "#</div>"
                    });
                    e.container.find("[type='submit']").click(function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        var filter = dataSource.filter() || { logic: "and", filters: [] };
                        var fieldFilters = $.map(element.find(":checkbox:checked"), function (input) {
                            return {
                                field: field,
                                operator: "eq",
                                value: input.value
                            };
                        });
                        if (fieldFilters.length) {
                            removeFiltersForField(filter, field);
                            filter.filters.push({
                                logic: "or",
                                filters: fieldFilters
                            });
                            dataSource.filter(filter);
                        }
                        popup.close();
                    });
                }

                function removeFiltersForField(expression, field) {
                    if (expression.filters) {
                        expression.filters = $.grep(expression.filters, function (filter) {
                            removeFiltersForField(filter, field);
                            if (filter.filters) {
                                return filter.filters.length;
                            } else {
                                return filter.field != field;
                            }
                        });
                    }
                }

                function uniqueForField(data, field) {
                    var map = {};
                    var result = [];
                    var item;
                    for (var i = 0; i < data.length; i++) {
                        item = data[i];
                        if (!map[item[field]]) {
                            result.push(item.toJSON());
                            map[item[field]] = true;
                        }
                    }
                    return result;
                }
                //END
                $("#nxt").attr("disabled", false);
                $("#totalCount").attr("disabled", false);
                $("#pageNumber").attr("disabled", false);
                var bck = document.getElementById("#bck");
                bck.style.display = "none";
                var pageNumberLbel = document.getElementById("#pageNumber");
                pageNumberLbel.style.display = "block";
                var nxt = document.getElementById("#nxt");
                nxt.style.display = "none";
                var totalCountLbel = document.getElementById("#totalCount");
                totalCountLbel.style.display = "block";
            };
        </script>
    </div>
</section>-->
<!--Filter Modal -->
<!--<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document" style="width:60%">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Filter Options </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body" id="ModelBodyHTML">
                <br />
                <div class="row">
                    <label class="col-md-2"> Birth Date or after  </label>
                    <input type="date" id="birtstartdate" class="col-md-3 text-infol" value="" />

                    <label class="col-md-2">Birth Date of before </label>
                    <input type="date" id="birthenddate" class="col-md-3 text-infol" />
                </div>
                <br />
                <div class="row">
                    <label class="col-md-2">Party Name</label><input type="text" id="PartyName" class="col-md-3 text-infol">
                    <label class="col-md-2">Party Number</label><input id="PartyNumber" type="text" class="col-md-3 text-infol" />
                </div>
                <br />
                <div class="row">
                    <label class="col-md-2">Branch Number</label>
                    <input type="text" id="BranchNumber" class="col-md-3 text-info1" />
                    <label class="col-md-2">Branch Name</label>
                    <select id="BranchName" class="col-md-3 text-infol">
                        <option></option>
                    </select>

                </div>
                <br />
                <div class="row">
                    <label class="col-md-2">Party Identification ID</label><input type="text" id="PartyIdentificationId" class="col-md-3 text-infol" />
                    <label class="col-md-2">Party Identification Type</label>
                    <select id="PartyIdentificationTypeDesc" class="col-md-3 text-infol">
                        <option></option>
                    </select>
                </div>
                <br />
                <div class="row">
                    <label class="col-md-2">Party Type</label>
                    <select id="PartyTypeDesc" class="col-md-3 text-infol">
                        <option></option>
                    </select>
                    <label class="col-md-2">Risk Classification</label>
                    <select id="RiskClassification" class="col-md-3 text-infol">
                        <option></option>
                    </select>
                </div>
                <br />
                <div class="row">
                    <label class="col-md-2">Party Tax ID</label><input type="text" id="PartyTaxId" class="col-md-3 text-infol" />
                    <label class="col-md-2">PEP</label>
                    <select id="PoliticallyExposedPersonInd" class="col-md-3 text-infol">
                        <option></option>
                        <option>Y</option>
                        <option>N</option>
                    </select>
                </div>
                <br />
                <div class="row">
                    <label class="col-md-2">Residence Country</label>
                    <select id="ResidenceCountryName" class="col-md-3 text-infol">
                        <option></option>
                    </select>
                    <label class="col-md-2">Citizenship Country</label>
                    <select id="CitizenshipCountryName" class="col-md-3 text-infol">
                        <option></option>
                    </select>
                </div>
                <br />
                <div class="row">
                    <label class="col-md-2">Street Address</label><input type="text" id="StreetAddress1" class="col-md-3 text-infol" />
                    <label class="col-md-2">Phone Number</label><input id="PhoneNumber1" type="text" class="col-md-3 text-infol" />
                </div>
                <br />
                <div class="row">
                    <label class="col-md-2">Mailing Address</label><input type="text" id="MailingAddress1" class="col-md-3 text-infol" />
                    <label class="col-md-2">Mailing City</label>
                    <select id="MailingCityName" class="col-md-3 text-infol">
                        <option></option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" style="float:left" onclick="CleartModelFilters()">Reset</button>

                <button type="button" class="btn btn-success" onclick="PresentData()" data-dismiss="modal">Apply Filters <span class="glyphicon glyphicon-search">  </span></button>

                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>-->
<!--Filter End Modal -->
<!--<script>
    // DropDown Filters Script
    // Get Drop Down API data
    $(document).ready(function () {
        $.getJSON("/HighRisk/GetBranchDropDown", function (data) {
            console.log(data);
            var DropDown = document.getElementById('BranchName');
            for (var M = 0; M < data.length; M++) {
                var option = document.createElement("option");
                option.value = data[M].BranchName;
                option.text = data[M].BranchName;
                DropDown.appendChild(option);
            }
        });
    });

    $(document).ready(function () {
        $.getJSON("/HighRisk/GetPartyIdentificationTypeDropDown", function (data) {
            console.log(data);
            var DropDown = document.getElementById('PartyIdentificationTypeDesc');
            for (var M = 0; M < data.length; M++) {
                var option = document.createElement("option");
                option.value = data[M].PartyIdentificationTypeDesc1;
                option.text = data[M].PartyIdentificationTypeDesc1;
                DropDown.appendChild(option);
            }
        });
    });

    $(document).ready(function () {
        $.getJSON("/HighRisk/GetPartyTypeDescDropDown", function (data) {
            console.log(data);
            var DropDown = document.getElementById('PartyTypeDesc');
            for (var M = 0; M < data.length; M++) {
                var option = document.createElement("option");
                option.value = data[M].CustomerType;
                option.text = data[M].CustomerType;
                DropDown.appendChild(option);
            }
        });
    });

    $(document).ready(function () {
        $.getJSON("/HighRisk/GetRiskClassificationDropDown", function (data) {
            console.log(data);
            var DropDown = document.getElementById('RiskClassification');
            for (var M = 0; M < data.length; M++) {
                var option = document.createElement("option");
                option.value = data[M].LovTypeDesc;
                option.text = data[M].LovTypeDesc;
                DropDown.appendChild(option);
            }
        });
    });


    $(document).ready(function () {
        $.getJSON("/HighRisk/GetResidenceCountryNameDropDown", function (data) {
            console.log(data);
            var DropDown = document.getElementById('ResidenceCountryName');
            for (var M = 0; M < data.length; M++) {
                var option = document.createElement("option");
                option.value = data[M].ResidenceCountryName;
                option.text = data[M].ResidenceCountryName;
                DropDown.appendChild(option);
            }
        });
    });

    $(document).ready(function () {
        $.getJSON("/HighRisk/GetMailingCityNameDropDown", function (data) {
            console.log(data);
            var DropDown = document.getElementById('MailingCityName');
            for (var M = 0; M < data.length; M++) {
                var option = document.createElement("option");
                option.value = data[M].MailingCityName;
                option.text = data[M].MailingCityName;
                DropDown.appendChild(option);
            }
        });
    });

    $(document).ready(function () {
        $.getJSON("/HighRisk/GetCitizenshipCountryNameDropDown", function (data) {
            console.log(data);
            var DropDown = document.getElementById('CitizenshipCountryName');
            for (var M = 0; M < data.length; M++) {
                var option = document.createElement("option");
                option.value = data[M].CitizenshipCountryName;
                option.text = data[M].CitizenshipCountryName;
                DropDown.appendChild(option);
            }
        });
    });

</script>

<style type="text/css">
    .checkbox-container {
        max-height: 200px;
        overflow: auto;
    }
</style>


<script>
    function getDate() {
        var today = new Date();

        document.getElementById("birtstartdate").defaultValue = today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);
        document.getElementById("birthenddate").defaultValue = today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);
        console.log(today.getFullYear());
    }
</script>-->
